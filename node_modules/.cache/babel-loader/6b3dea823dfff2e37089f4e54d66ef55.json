{"ast":null,"code":"var headers = {\n  Accept: 'application/json',\n  'Access-Control-Allow-Origin': '*'\n};\nexport var fetchProjects = function fetchProjects() {\n  return fetch(\"http://localhost:5000/api/project?\", {\n    headers: headers,\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.content;\n  });\n};\nexport var uploadImages = function uploadImages(data) {\n  var urls = [];\n  data.pictures.forEach(function (file) {\n    var formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        res.json().then(function (response) {\n          urls.push(response.url);\n\n          if (urls.length === data.pictures.length) {\n            createProject(urls, data.title, data.description);\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  });\n};\nexport var createProject = function createProject(urls, title, description) {\n  var formData = new FormData();\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["headers","Accept","fetchProjects","fetch","method","then","response","json","data","content","uploadImages","urls","pictures","forEach","file","formData","FormData","append","body","res","ok","push","url","length","createProject","title","description","status","alert","e"],"mappings":"AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,kBADM;AAEd,iCAA8B;AAFhB,CAAhB;AAKA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAEjC,SAAOC,KAAK,uCAAuC;AACjDH,IAAAA,OAAO,EAAPA,OADiD;AAEjDI,IAAAA,MAAM,EAAE;AAFyC,GAAvC,CAAL,CAINC,IAJM,CAID,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAJP,EAKNF,IALM,CAKD,UAAAG,IAAI;AAAA,WAAIA,IAAI,CAACC,OAAT;AAAA,GALH,CAAP;AAMD,CARM;AAUP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;AACpC,MAAIG,IAAI,GAAG,EAAX;AACAH,EAAAA,IAAI,CAACI,QAAL,CAAcC,OAAd,CAAsB,UAACC,IAAD,EAAU;AAC9B,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACAX,IAAAA,KAAK,CAAC,+CAAD,EACL;AACEH,MAAAA,OAAO,EAAEA,OADX;AAEEI,MAAAA,MAAM,EAAE,MAFV;AAGEc,MAAAA,IAAI,EAAEH;AAHR,KADK,CAAL,CAKGV,IALH,CAKQ,UAACc,GAAD,EAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACVD,QAAAA,GAAG,CAACZ,IAAJ,GAAWF,IAAX,CAAgB,UAACC,QAAD,EAAc;AAC5BK,UAAAA,IAAI,CAACU,IAAL,CAAUf,QAAQ,CAACgB,GAAnB;;AACA,cAAGX,IAAI,CAACY,MAAL,KAAgBf,IAAI,CAACI,QAAL,CAAcW,MAAjC,EAAwC;AACtCC,YAAAA,aAAa,CAACb,IAAD,EAAOH,IAAI,CAACiB,KAAZ,EAAmBjB,IAAI,CAACkB,WAAxB,CAAb;AACD;AACF,SALD;AAMD,OAPD,MAOO,IAAIP,GAAG,CAACQ,MAAJ,IAAc,GAAlB,EAAuB;AAC5BC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,KAhBD,EAgBG,UAAUC,CAAV,EAAa;AACdD,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAlBD;AAmBD,GAtBD;AAuBD,CAzBM;AA2BP,OAAO,IAAMJ,aAAa,GAAG,SAAhBA,aAAgB,CAACb,IAAD,EAAOc,KAAP,EAAcC,WAAd,EAA8B;AACzD,MAAIX,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBQ,KAAzB;AACAV,EAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BS,WAA/B;AACAX,EAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BN,IAA5B;AACAR,EAAAA,KAAK,CAAC,iDAAD,EACL;AACEH,IAAAA,OAAO,EAAEA,OADX;AAEEI,IAAAA,MAAM,EAAE,MAFV;AAGEc,IAAAA,IAAI,EAAEH;AAHR,GADK,CAAL,CAKGV,IALH,CAKQ,UAAUc,GAAV,EAAe;AACrB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACVQ,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KAFD,MAEO,IAAIT,GAAG,CAACQ,MAAJ,IAAc,GAAlB,EAAuB;AAC5BC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,GAXD,EAWG,UAAUC,CAAV,EAAa;AACdD,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,GAbD;AAcD,CAnBM","sourcesContent":["const headers = {\n  Accept: 'application/json',\n  'Access-Control-Allow-Origin':'*'\n};\n\nexport const fetchProjects = () => {\n\n  return fetch(`http://localhost:5000/api/project?`, {\n    headers,\n    method: \"GET\",\n  })\n  .then(response => response.json())\n  .then(data => data.content)    \n};\n\nexport const uploadImages = (data) => {\n  var urls = []\n  data.pictures.forEach((file) => {\n    let formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", \n    {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((response) => {\n          urls.push(response.url)\n          if(urls.length === data.pictures.length){\n            createProject(urls, data.title, data.description)\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  })\n}\n\nexport const createProject = (urls, title, description) => {\n  let formData = new FormData();\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n"]},"metadata":{},"sourceType":"module"}