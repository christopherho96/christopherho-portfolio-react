{"ast":null,"code":"import { ACCESS_TOKEN } from './constants';\nvar headers = new Headers({\n  'Access-Control-Allow-Origin': '*',\n  'Content-Type': 'application/json'\n});\nvar formImageUploadHeaders = new Headers({\n  'Access-Control-Allow-Origin': '*',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n});\nexport var login = function login(user) {\n  return fetch(\"http://localhost:5000/api/auth/signin\", {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.accessToken;\n  });\n};\nexport var deleteProject = function deleteProject(projectId) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  return fetch(\"http://localhost:5000/api/project/deleteproject/\" + projectId, {\n    headers: headers,\n    method: \"DELETE\"\n  }).then(function (response) {\n    return response.ok;\n  });\n};\nexport var fetchProjects = function fetchProjects() {\n  return fetch(\"http://localhost:5000/api/project?\", {\n    headers: headers,\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.content;\n  });\n};\nexport var uploadImages = function uploadImages(data) {\n  var urls = [];\n  data.pictures.forEach(function (file) {\n    var formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", {\n      headers: formImageUploadHeaders,\n      method: \"POST\",\n      body: formData\n    }).then(function (response) {\n      return response.json().then(function (json) {\n        if (response.ok) {\n          urls.push(response.url);\n\n          if (urls.length === data.pictures.length) {\n            return urls;\n          }\n        } else {\n          return Promise.reject(json);\n        }\n      });\n    });\n  });\n};\nexport var uploadThumbnail = function uploadThumbnail(urls, data) {\n  var formData = new FormData();\n  formData.append('file', data.thumbnail);\n  fetch(\"http://localhost:5000/api/project/uploadImage\", {\n    headers: formImageUploadHeaders,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      res.json().then(function (response) {\n        createProject(urls, response.url, data.title, data.description, data.type);\n      });\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};\nexport var createProject = function createProject(pictures, thumbnail, title, description, type) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var project = {\n    'title': title,\n    'type': type,\n    'thumbnail': thumbnail,\n    'description': description,\n    'pictures': pictures\n  };\n  fetch(\"http://localhost:5000/api/project/uploadproject\", {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(project)\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["ACCESS_TOKEN","headers","Headers","formImageUploadHeaders","localStorage","getItem","login","user","fetch","method","body","JSON","stringify","then","response","json","data","accessToken","deleteProject","projectId","append","ok","fetchProjects","content","uploadImages","urls","pictures","forEach","file","formData","FormData","push","url","length","Promise","reject","uploadThumbnail","thumbnail","res","createProject","title","description","type","status","alert","e","project"],"mappings":"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","sourcesContent":["import {ACCESS_TOKEN} from './constants'\n\nconst headers = new Headers ({\n  'Access-Control-Allow-Origin':'*',\n  'Content-Type': 'application/json'\n});\n\nconst formImageUploadHeaders = new Headers ({\n  'Access-Control-Allow-Origin':'*',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n})\n\nexport const login = (user) => {\n  return fetch(\"http://localhost:5000/api/auth/signin\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(user)\n  })  \n  .then(response => response.json())\n  .then(data => data.accessToken)\n}\n\nexport const deleteProject = (projectId) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  return fetch(\"http://localhost:5000/api/project/deleteproject/\" + projectId,\n  {\n    headers: headers,\n    method: \"DELETE\",\n  })  \n  .then(response => response.ok)\n};\n\nexport const fetchProjects = () => {\n  return fetch(`http://localhost:5000/api/project?`, {\n    headers,\n    method: \"GET\",\n  })\n  .then(response => response.json())\n  .then(data => data.content)    \n};\n\nexport const uploadImages = (data) => {\n  var urls = []\n  data.pictures.forEach((file) => {\n    let formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", \n    {\n      headers: formImageUploadHeaders,\n      method: \"POST\",\n      body: formData\n    }).then(response => {\n        return response.json().then(json => {\n          if(response.ok){\n            urls.push(response.url)\n            if(urls.length === data.pictures.length){\n              return urls\n            }\n          }else{\n            return Promise.reject(json);\n          }\n        });\n    })\n  })\n}\n\nexport const uploadThumbnail = (urls, data) => {\n  let formData = new FormData();\n  formData.append('file', data.thumbnail);\n  fetch(\"http://localhost:5000/api/project/uploadImage\", \n  {\n    headers: formImageUploadHeaders,\n    method: \"POST\",\n    body: formData\n  }).then((res) => {\n    if (res.ok) {\n      res.json().then((response) => {\n        createProject(urls, response.url, data.title, data.description, data.type)\n      });\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n\nexport const createProject = (pictures, thumbnail, title, description, type) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  let project = {\n    'title': title,\n    'type': type,\n    'thumbnail': thumbnail,\n    'description': description,\n    'pictures': pictures\n  }\n  fetch(\"http://localhost:5000/api/project/uploadproject\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(project)\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n\n"]},"metadata":{},"sourceType":"module"}