{"ast":null,"code":"import _objectSpread from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_PROJECTS_FOR_GALLERY, SELECT_PROJECT } from '../../../utils/constants';\nexport var defaultState = {\n  projectsFound: [],\n  project: {}\n};\n\nvar projectGallery = function projectGallery() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_PROJECTS_FOR_GALLERY:\n      return _objectSpread({}, state, {\n        projectsFound: action.payload,\n        project: action.payload[0]\n      });\n\n    case SELECT_PROJECT:\n      return _objectSpread({}, state, {\n        project: state.projectsFound[action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default projectGallery;","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/ProjectGallery/redux/reducers.js"],"names":["FETCH_PROJECTS_FOR_GALLERY","SELECT_PROJECT","defaultState","projectsFound","project","projectGallery","state","action","type","payload"],"mappings":";AAAA,SACEA,0BADF,EAC8BC,cAD9B,QAEO,0BAFP;AAIA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,aAAa,EAAE,EADW;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAArB;;AAKP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,0BAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,aAAa,EAAEI,MAAM,CAACE,OAFxB;AAGEL,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAe,CAAf;AAHX;;AAKF,SAAKR,cAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,OAAO,EAAEE,KAAK,CAACH,aAAN,CAAoBI,MAAM,CAACE,OAA3B;AAFX;;AAIF;AACE,aAAOH,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,cAAf","sourcesContent":["import {\n  FETCH_PROJECTS_FOR_GALLERY, SELECT_PROJECT,\n} from '../../../utils/constants';\n\nexport const defaultState = {\n  projectsFound: [],\n  project: {}\n};\n\nconst projectGallery = (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_PROJECTS_FOR_GALLERY:\n      return {\n        ...state,\n        projectsFound: action.payload,\n        project: action.payload[0]\n      };\n    case SELECT_PROJECT:\n      return {\n        ...state,\n        project: state.projectsFound[action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default projectGallery;"]},"metadata":{},"sourceType":"module"}