{"ast":null,"code":"import _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase from './Showcase';\nimport PortfolioCarousel from './PortfolioCarousel';\nimport ProjectDialog from './ProjectDialog';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport { getProjects as _getProjects, openProjectDialog, closeProjectDialog } from './redux/actions';\nimport { projectsFound, isProjectDialogOpen } from './redux/selectors';\nvar styles = {\n  grid: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 700\n  },\n  thumbnail: {\n    cursor: 'pointer'\n  }\n};\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          projectsFound = _this$props.projectsFound,\n          openEditDeveloperDialog = _this$props.openEditDeveloperDialog,\n          closeEditDeveloperDialog = _this$props.closeEditDeveloperDialog,\n          isProjectDialogOpen = _this$props.isProjectDialogOpen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Showcase, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        cellHeight: 500,\n        cols: 3,\n        styles: styles.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, projectsFound.map(function (project) {\n        return React.createElement(GridListTile, {\n          key: project.id,\n          cols: 1,\n          onClick: function onClick() {\n            return _this.selectPhoto(project.id);\n          },\n          styles: styles.thumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: project.thumbnail,\n          alt: project.title,\n          styles: styles.thumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      })))), React.createElement(ProjectDialog, {\n        project: {},\n        showDialog: isProjectDialogOpen,\n        closeDialog: closeEditDeveloperDialog,\n        scroll: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectsFound: projectsFound(state),\n    isProjectDialogOpen: isProjectDialogOpen(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProjects: function getProjects() {\n      return dispatch(_getProjects());\n    },\n    openEditDeveloperDialog: function openEditDeveloperDialog(projectData) {\n      return dispatch(openProjectDialog(projectData));\n    },\n    closeEditDeveloperDialog: function closeEditDeveloperDialog() {\n      return dispatch(closeProjectDialog());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js"],"names":["React","connect","Showcase","PortfolioCarousel","ProjectDialog","GridList","GridListTile","Grid","getProjects","openProjectDialog","closeProjectDialog","projectsFound","isProjectDialogOpen","styles","grid","marginLeft","marginRight","width","thumbnail","cursor","Home","props","openEditDeveloperDialog","closeEditDeveloperDialog","map","project","id","selectPhoto","title","Component","mapStateToProps","state","mapDispatchToProps","dispatch","projectData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase  from './Showcase';\nimport PortfolioCarousel from './PortfolioCarousel';\nimport ProjectDialog from './ProjectDialog';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  getProjects,\n  openProjectDialog,\n  closeProjectDialog\n} from './redux/actions';\nimport {\n  projectsFound,\n  isProjectDialogOpen\n} from './redux/selectors';\n\nconst styles = {\n  grid : {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 700\n  },\n\n  thumbnail: {\n    cursor:'pointer'\n  }\n};\n\n\nexport class Home extends React.Component {\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render(){\n    const {\n      projectsFound,\n      openEditDeveloperDialog,\n      closeEditDeveloperDialog,\n      isProjectDialogOpen\n    } = this.props\n    \n    return(\n      <div>\n        <Showcase>\n        </Showcase>\n        {/* <PortfolioCarousel\n          projectsFound = {projectsFound}\n          openProjectDialog = {openEditDeveloperDialog}\n        /> */}\n        <Grid container spacing = {24}>\n        <Grid item xs={12}>\n        <GridList cellHeight={500} cols={3} styles={styles.grid}>\n          {projectsFound.map(project => (\n            <GridListTile key={project.id} cols={1} onClick={() => this.selectPhoto(project.id)} styles={styles.thumbnail}>\n              <img src={project.thumbnail} alt={project.title} styles={styles.thumbnail} />\n            </GridListTile>\n          ))}\n        </GridList>\n        </Grid>\n        </Grid>\n        <ProjectDialog\n          project={{}}\n          showDialog={isProjectDialogOpen}\n          closeDialog={closeEditDeveloperDialog}\n          scroll='body'\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  projectsFound: projectsFound(state),\n  isProjectDialogOpen: isProjectDialogOpen(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: () => dispatch(getProjects()),\n  openEditDeveloperDialog: projectData=> dispatch(openProjectDialog(projectData)),\n  closeEditDeveloperDialog: () => dispatch(closeProjectDialog()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}