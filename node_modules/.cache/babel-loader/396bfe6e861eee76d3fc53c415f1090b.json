{"ast":null,"code":"var _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/ProfileDialog.js\",\n    _this = this;\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}\n\nvar styles = {\n  showCaseContentLeft: {},\n  showCaseContentRight: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  }\n};\n\nvar ProjectDialog = function ProjectDialog(_ref) {\n  var showDialog = _ref.showDialog,\n      closeDialog = _ref.closeDialog;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: _this.handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Slide in alert dialog\"), React.createElement(Dialog, {\n    open: showDialog,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: closeDialog,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {},\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Disagree\"), React.createElement(Button, {\n    onClick: function onClick() {},\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Agree\"))));\n};\n\nexport default ProjectDialog;","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/ProfileDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","props","styles","showCaseContentLeft","showCaseContentRight","paddingLeft","paddingRight","description","whiteSpace","ProjectDialog","showDialog","closeDialog","handleClickOpen"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AACD,IAAMC,MAAM,GAAG;AACbC,EAAAA,mBAAmB,EAAC,EADP;AAGbC,EAAAA,oBAAoB,EAAC;AACnBC,IAAAA,WAAW,EAAC,EADO;AAEnBC,IAAAA,YAAY,EAAE;AAFK,GAHR;AAObC,EAAAA,WAAW,EAAC;AACVC,IAAAA,UAAU,EAAE;AADF;AAPC,CAAf;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAGhB;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAE,KAAI,CAACC,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAIA,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEF,UADR;AAEE,IAAA,mBAAmB,EAAEV,UAFvB;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,OAAO,EAAEW,WAJX;AAKE,uBAAgB,0BALlB;AAME,wBAAiB,gCANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gCADH,CARF,EAWE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIADF,CAXF,EAiBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAM,CAAE,CAAzB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAM,CAAE,CAAzB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAjBF,CAJA,CADF;AAiCD,CArCD;;AAuCA,eAAeF,aAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\nconst styles = {\n  showCaseContentLeft:{\n  },\n  showCaseContentRight:{\n    paddingLeft:20,\n    paddingRight: 20\n  },\n  description:{\n    whiteSpace: 'pre-line'\n  }\n};\n\nconst ProjectDialog = ({\n  showDialog,\n  closeDialog\n}) => {\n  return (\n    <div>\n    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n      Slide in alert dialog\n    </Button>\n    <Dialog\n      open={showDialog}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={closeDialog}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        {\"Use Google's location service?\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          Let Google help apps determine location. This means sending anonymous location data to\n          Google, even when no apps are running.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => {}} color=\"primary\">\n          Disagree\n        </Button>\n        <Button onClick={() => {}} color=\"primary\">\n          Agree\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n  );\n};\n\nexport default ProjectDialog;"]},"metadata":{},"sourceType":"module"}