{"ast":null,"code":"import { login, fetchProjects, deleteProject, uploadImage } from '../../../utils/api';\nimport { LOGIN, LOGOUT, ACCESS_TOKEN, FETCH_PROJECTS_FOR_DASHBOARD, OPEN_DELETE_PROJECT_DIALOG, CLOSE_DELETE_PROJECT_DIALOG, SHOW_PROGRESS_OVERLAY, HIDE_PROGRESS_OVERLAY } from '../../../utils/constants';\nimport history from '../../../utils/history';\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    login(user).then(function (token) {\n      if (token !== undefined) {\n        dispatch({\n          type: LOGIN\n        });\n        localStorage.setItem(ACCESS_TOKEN, token);\n        history.push(\"/dashboard\");\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n    localStorage.removeItem(ACCESS_TOKEN);\n    history.push(\"/login\");\n  };\n};\nexport var deleteSelectedProject = function deleteSelectedProject(projectId) {\n  return function (dispatch) {\n    console.log(projectId);\n    deleteProject(projectId).then(function (success) {\n      if (success) {\n        window.location.reload();\n        console.log(\"success deleting\");\n      } else {\n        console.log(\"error deleting\");\n      }\n    });\n  };\n};\nexport var getProjects = function getProjects() {\n  return function (dispatch) {\n    return fetchProjects().then(function (projects) {\n      dispatch({\n        type: FETCH_PROJECTS_FOR_DASHBOARD,\n        payload: projects\n      });\n    });\n  };\n};\nexport var openDeleteProjectDialog = function openDeleteProjectDialog(projectId) {\n  return function (dispatch) {\n    dispatch({\n      type: OPEN_DELETE_PROJECT_DIALOG,\n      payload: projectId\n    });\n  };\n};\nexport var closeDeleteProjectDialog = function closeDeleteProjectDialog() {\n  return function (dispatch) {\n    dispatch({\n      type: CLOSE_DELETE_PROJECT_DIALOG\n    });\n  };\n};\nexport var createProject = function createProject(project) {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_PROGRESS_OVERLAY\n    }); //var urls = []\n\n    project.pictures.forEach(function (picture) {\n      uploadImage(picture).then(function (json) {\n        console.log(json.url);\n      });\n    }); // dispatch({\n    //   type: HIDE_PROGRESS_OVERLAY,\n    // });\n    // history.push(\"/dashboard\")\n  };\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/redux/actions.js"],"names":["login","fetchProjects","deleteProject","uploadImage","LOGIN","LOGOUT","ACCESS_TOKEN","FETCH_PROJECTS_FOR_DASHBOARD","OPEN_DELETE_PROJECT_DIALOG","CLOSE_DELETE_PROJECT_DIALOG","SHOW_PROGRESS_OVERLAY","HIDE_PROGRESS_OVERLAY","history","loginUser","user","dispatch","then","token","undefined","type","localStorage","setItem","push","console","log","logoutUser","removeItem","deleteSelectedProject","projectId","success","window","location","reload","getProjects","projects","payload","openDeleteProjectDialog","closeDeleteProjectDialog","createProject","project","pictures","forEach","picture","json","url"],"mappings":"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","sourcesContent":["import { login, fetchProjects, deleteProject, uploadImage } from '../../../utils/api'\nimport { \n  LOGIN,\n  LOGOUT,\n  ACCESS_TOKEN,\n  FETCH_PROJECTS_FOR_DASHBOARD,\n  OPEN_DELETE_PROJECT_DIALOG,\n  CLOSE_DELETE_PROJECT_DIALOG,\n  SHOW_PROGRESS_OVERLAY,\n  HIDE_PROGRESS_OVERLAY,\n} from '../../../utils/constants'\nimport history from '../../../utils/history'\n\nexport const loginUser = (user) => dispatch => {\n  login(user).then( token => {\n    if(token !== undefined){\n      dispatch({\n        type: LOGIN,\n      })\n      localStorage.setItem(ACCESS_TOKEN, token)\n      history.push(\"/dashboard\")\n    } else {\n      console.log(\"error\")\n    }\n  })\n}\n\nexport const logoutUser = () => dispatch => {\n      dispatch({\n        type: LOGOUT,\n      })\n      localStorage.removeItem(ACCESS_TOKEN)\n      history.push(\"/login\")\n}\n\nexport const deleteSelectedProject = (projectId) => dispatch => {\n  console.log(projectId)\n  deleteProject(projectId).then( success => {\n    if(success){\n      window.location.reload()\n      console.log(\"success deleting\")\n    } else {\n      console.log(\"error deleting\")\n    }\n  })\n}\n\nexport const getProjects = () => dispatch => {\n  return fetchProjects().then(projects => {\n    dispatch({\n      type: FETCH_PROJECTS_FOR_DASHBOARD,\n      payload: projects,\n    })\n  })\n}\n\nexport const openDeleteProjectDialog = projectId => dispatch => {\n  dispatch({\n    type: OPEN_DELETE_PROJECT_DIALOG,\n    payload: projectId,\n  });\n};\n\nexport const closeDeleteProjectDialog = () => dispatch => {\n  dispatch({\n    type: CLOSE_DELETE_PROJECT_DIALOG,\n  });\n};\n\nexport const createProject = (project) => dispatch => {\n  dispatch({\n    type: SHOW_PROGRESS_OVERLAY,\n  })\n  //var urls = []\n  project.pictures.forEach((picture) => {\n    uploadImage(picture).then(json => {\n      console.log(json.url)\n    })\n  })\n  // dispatch({\n  //   type: HIDE_PROGRESS_OVERLAY,\n  // });\n  // history.push(\"/dashboard\")\n}"]},"metadata":{},"sourceType":"module"}