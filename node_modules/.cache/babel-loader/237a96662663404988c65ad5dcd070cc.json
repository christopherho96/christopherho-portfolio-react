{"ast":null,"code":"import { login, fetchProjects, deleteProject, uploadImage, createProject, updateProject } from '../../../utils/api';\nimport { LOGIN, LOGOUT, ACCESS_TOKEN, FETCH_PROJECTS_FOR_DASHBOARD, OPEN_DELETE_PROJECT_DIALOG, CLOSE_DELETE_PROJECT_DIALOG, SHOW_PROGRESS_OVERLAY, HIDE_PROGRESS_OVERLAY, SHOW_SNACKBAR, HIDE_SNACKBAR, UPDATING_PROJECT, FINISHED_CREATING_UPDATING_PROJECT } from '../../../utils/constants';\nimport history from '../../../utils/history';\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    login(user).then(function (token) {\n      if (token !== undefined) {\n        dispatch({\n          type: LOGIN\n        });\n        localStorage.setItem(ACCESS_TOKEN, token);\n        history.push(\"/dashboard\");\n      } else {\n        dispatch(handleError(\"Invalid Credentials.\"));\n      }\n    });\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n    localStorage.removeItem(ACCESS_TOKEN);\n    history.push(\"/login\");\n  };\n};\nexport var deleteSelectedProject = function deleteSelectedProject(projectId) {\n  return function (dispatch) {\n    deleteProject(projectId).then(function (success) {\n      if (success) {\n        window.location.reload();\n      } else {\n        dispatch(handleError(\"Failed to delete project. Please check the project exists.\"));\n      }\n    });\n  };\n};\nexport var getProjects = function getProjects() {\n  return function (dispatch) {\n    return fetchProjects().then(function (projects) {\n      dispatch({\n        type: FETCH_PROJECTS_FOR_DASHBOARD,\n        payload: projects\n      });\n    });\n  };\n};\nexport var updateProjectInProjectForm = function updateProjectInProjectForm(index) {\n  return function (dispatch) {\n    dispatch({\n      type: UPDATING_PROJECT,\n      payload: index\n    });\n  };\n};\nexport var finishedCreatingUpdatingProject = function finishedCreatingUpdatingProject() {\n  return function (dispatch) {\n    dispatch({\n      type: FINISHED_CREATING_UPDATING_PROJECT\n    });\n  };\n};\nexport var openDeleteProjectDialog = function openDeleteProjectDialog(projectId) {\n  return function (dispatch) {\n    dispatch({\n      type: OPEN_DELETE_PROJECT_DIALOG,\n      payload: projectId\n    });\n  };\n};\nexport var closeDeleteProjectDialog = function closeDeleteProjectDialog() {\n  return function (dispatch) {\n    dispatch({\n      type: CLOSE_DELETE_PROJECT_DIALOG\n    });\n  };\n};\nexport var createAProject = function createAProject(project, isUpdatingAPreviousProject) {\n  return function (dispatch) {\n    var errorMessage = formCheck(project);\n\n    if (!errorMessage) {\n      dispatch({\n        type: SHOW_PROGRESS_OVERLAY\n      });\n      var uploadImageCalls = [];\n      project.pictures.forEach(function (picture) {\n        uploadImageCalls.push(uploadImage(picture));\n      });\n      Promise.all(uploadImageCalls).then(function (responses) {\n        console.log(responses);\n      }); //   project.pictures.forEach((picture) => {\n      //     uploadImage(picture).then(json => {\n      //       pictureUrls.push(json.url)\n      //       if(pictureUrls.length === project.pictures.length){\n      //         uploadImage(project.thumbnail).then(json => {\n      //           if(isUpdatingAPreviousProject){\n      //             updateProject(\n      //               pictureUrls, \n      //               json.url,\n      //               project.title,\n      //               project.description,\n      //               project.type,\n      //               project.id,\n      //               project.linkReference\n      //             ).then(json => {\n      //               dispatch({\n      //                 type: HIDE_PROGRESS_OVERLAY,\n      //               });\n      //               history.push(\"/dashboard\")\n      //             }).catch(error => {\n      //               dispatch(handleError(error.message))\n      //             })\n      //           }else{\n      //             createProject(\n      //               pictureUrls, \n      //               json.url,\n      //               project.title,\n      //               project.description,\n      //               project.type,\n      //               project.linkReference\n      //             ).then(json => {\n      //               dispatch({\n      //                 type: HIDE_PROGRESS_OVERLAY,\n      //               });\n      //               history.push(\"/dashboard\")\n      //             }).catch(error => {\n      //               dispatch(handleError(error.message))\n      //             })\n      //           }\n      //         }).catch(error => {\n      //           dispatch(handleError(error.message))\n      //         })\n      //       }\n      //     }).catch(error => {\n      //       dispatch(handleError(error.message))\n      //     })\n      //   })\n      // }else{\n      //   dispatch(handleError(errorMessage))\n      // }\n    }\n  };\n};\n\nvar handleError = function handleError(message) {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_SNACKBAR,\n      payload: message\n    });\n  };\n};\n\nexport var hideSnackBar = function hideSnackBar() {\n  return function (dispatch) {\n    dispatch({\n      type: HIDE_SNACKBAR\n    });\n  };\n};\n\nvar formCheck = function formCheck(project) {\n  var message;\n\n  if (project.title.length < 6) {\n    message = \"Title of project must be longer than 6 characters.\";\n  } else if (project.type.length < 1) {\n    message = \"Project type cannot be empty.\";\n  } else if (!project.thumbnail) {\n    message = \"Project must have a thumbnail image.\";\n  } else if (project.description.length < 40) {\n    message = \"Description of project must be longer than 40 characters.\";\n  } else if (project.pictures.length < 1) {\n    message = \"Project must have one picture.\";\n  }\n\n  return message;\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/redux/actions.js"],"names":["login","fetchProjects","deleteProject","uploadImage","createProject","updateProject","LOGIN","LOGOUT","ACCESS_TOKEN","FETCH_PROJECTS_FOR_DASHBOARD","OPEN_DELETE_PROJECT_DIALOG","CLOSE_DELETE_PROJECT_DIALOG","SHOW_PROGRESS_OVERLAY","HIDE_PROGRESS_OVERLAY","SHOW_SNACKBAR","HIDE_SNACKBAR","UPDATING_PROJECT","FINISHED_CREATING_UPDATING_PROJECT","history","loginUser","user","dispatch","then","token","undefined","type","localStorage","setItem","push","handleError","logoutUser","removeItem","deleteSelectedProject","projectId","success","window","location","reload","getProjects","projects","payload","updateProjectInProjectForm","index","finishedCreatingUpdatingProject","openDeleteProjectDialog","closeDeleteProjectDialog","createAProject","project","isUpdatingAPreviousProject","errorMessage","formCheck","uploadImageCalls","pictures","forEach","picture","Promise","all","responses","console","log","message","hideSnackBar","title","length","thumbnail","description"],"mappings":"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","sourcesContent":["import { \n  login, \n  fetchProjects, \n  deleteProject, \n  uploadImage, \n  createProject, \n  updateProject \n} from '../../../utils/api'\nimport { \n  LOGIN,\n  LOGOUT,\n  ACCESS_TOKEN,\n  FETCH_PROJECTS_FOR_DASHBOARD,\n  OPEN_DELETE_PROJECT_DIALOG,\n  CLOSE_DELETE_PROJECT_DIALOG,\n  SHOW_PROGRESS_OVERLAY,\n  HIDE_PROGRESS_OVERLAY,\n  SHOW_SNACKBAR,\n  HIDE_SNACKBAR,\n  UPDATING_PROJECT,\n  FINISHED_CREATING_UPDATING_PROJECT,\n} from '../../../utils/constants'\nimport history from '../../../utils/history'\n\nexport const loginUser = (user) => dispatch => {\n  login(user).then( token => {\n    if(token !== undefined){\n      dispatch({\n        type: LOGIN,\n      })\n      localStorage.setItem(ACCESS_TOKEN, token)\n      history.push(\"/dashboard\")\n    } else {\n      dispatch(handleError(\"Invalid Credentials.\"))\n    }\n  })\n}\n\nexport const logoutUser = () => dispatch => {\n      dispatch({\n        type: LOGOUT,\n      })\n      localStorage.removeItem(ACCESS_TOKEN)\n      history.push(\"/login\")\n}\n\nexport const deleteSelectedProject = (projectId) => dispatch => {\n  deleteProject(projectId).then( success => {\n    if(success){\n      window.location.reload()\n    } else {\n      dispatch(handleError(\"Failed to delete project. Please check the project exists.\"))\n    }\n  })\n}\n\nexport const getProjects = () => dispatch => {\n  return fetchProjects().then(projects => {\n    dispatch({\n      type: FETCH_PROJECTS_FOR_DASHBOARD,\n      payload: projects,\n    })\n  })\n}\n\nexport const updateProjectInProjectForm = (index) => dispatch => {\n  dispatch({\n    type: UPDATING_PROJECT,\n    payload: index\n  })\n}\n\nexport const finishedCreatingUpdatingProject = () => dispatch => {\n  dispatch({\n    type: FINISHED_CREATING_UPDATING_PROJECT\n  })\n}\n\n\nexport const openDeleteProjectDialog = projectId => dispatch => {\n  dispatch({\n    type: OPEN_DELETE_PROJECT_DIALOG,\n    payload: projectId,\n  });\n};\n\nexport const closeDeleteProjectDialog = () => dispatch => {\n  dispatch({\n    type: CLOSE_DELETE_PROJECT_DIALOG,\n  });\n};\n\nexport const createAProject = (project, isUpdatingAPreviousProject) => dispatch => {\n  var errorMessage = formCheck(project)\n  if(!errorMessage){\n    dispatch({\n      type: SHOW_PROGRESS_OVERLAY,\n    })\n    var uploadImageCalls = []\n\n    \n    project.pictures.forEach((picture) => {\n      uploadImageCalls.push(uploadImage(picture))\n    })\n    Promise.all(uploadImageCalls\n    ).then( (responses) => {\n      console.log(responses)\n    })\n  //   project.pictures.forEach((picture) => {\n\n  //     uploadImage(picture).then(json => {\n  //       pictureUrls.push(json.url)\n  //       if(pictureUrls.length === project.pictures.length){\n  //         uploadImage(project.thumbnail).then(json => {\n\n  //           if(isUpdatingAPreviousProject){\n  //             updateProject(\n  //               pictureUrls, \n  //               json.url,\n  //               project.title,\n  //               project.description,\n  //               project.type,\n  //               project.id,\n  //               project.linkReference\n  //             ).then(json => {\n  //               dispatch({\n  //                 type: HIDE_PROGRESS_OVERLAY,\n  //               });\n  //               history.push(\"/dashboard\")\n  //             }).catch(error => {\n  //               dispatch(handleError(error.message))\n  //             })\n  //           }else{\n  //             createProject(\n  //               pictureUrls, \n  //               json.url,\n  //               project.title,\n  //               project.description,\n  //               project.type,\n  //               project.linkReference\n  //             ).then(json => {\n  //               dispatch({\n  //                 type: HIDE_PROGRESS_OVERLAY,\n  //               });\n  //               history.push(\"/dashboard\")\n  //             }).catch(error => {\n  //               dispatch(handleError(error.message))\n  //             })\n  //           }\n\n  //         }).catch(error => {\n  //           dispatch(handleError(error.message))\n  //         })\n  //       }\n  //     }).catch(error => {\n  //       dispatch(handleError(error.message))\n  //     })\n  //   })\n  // }else{\n  //   dispatch(handleError(errorMessage))\n  // }\n  }\n}\n\nconst handleError = (message) => dispatch => {\n  dispatch({\n    type: SHOW_SNACKBAR,\n    payload: message\n  })\n}\n\nexport const hideSnackBar = () => dispatch => {\n  dispatch({\n    type: HIDE_SNACKBAR\n  })\n}\n\nconst formCheck = (project) => {\n  var message\n  if(project.title.length <6){\n    message = \"Title of project must be longer than 6 characters.\"\n  }else if(project.type.length <1){\n    message = \"Project type cannot be empty.\"\n  } else if(!project.thumbnail){\n    message = \"Project must have a thumbnail image.\"\n  }else if(project.description.length <40){\n    message = \"Description of project must be longer than 40 characters.\"\n  } else if(project.pictures.length < 1){\n    message = \"Project must have one picture.\"\n  }\n  return message\n}"]},"metadata":{},"sourceType":"module"}