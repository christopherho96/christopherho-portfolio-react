{"ast":null,"code":"import { ACCESS_TOKEN } from './constants';\nvar headers = new Headers({\n  'Access-Control-Allow-Origin': '*'\n});\nexport var login = function login(user) {\n  headers.append('Content-Type', 'application/json');\n  return fetch(\"http://localhost:5000/api/auth/signin\", {\n    headers: new Headers({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json'\n    }),\n    method: \"POST\",\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.accessToken;\n  });\n};\nexport var deleteProject = function deleteProject(projectId) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  return fetch(\"http://localhost:5000/api/project/deleteproject/\" + projectId, {\n    headers: headers,\n    method: \"DELETE\"\n  }).then(function (response) {\n    return response.ok;\n  });\n};\nexport var fetchProjects = function fetchProjects() {\n  return fetch(\"http://localhost:5000/api/project?\", {\n    headers: headers,\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.content;\n  });\n};\nexport var uploadImages = function uploadImages(data) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var urls = [];\n  data.pictures.forEach(function (file) {\n    var formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", {\n      headers: new Headers({\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n      }),\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        res.json().then(function (response) {\n          urls.push(response.url);\n\n          if (urls.length === data.pictures.length) {\n            uploadThumbnail(urls, data);\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  });\n};\nexport var uploadThumbnail = function uploadThumbnail(urls, data) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var formData = new FormData();\n  formData.append('file', data.thumbnail);\n  fetch(\"http://localhost:5000/api/project/uploadImage\", {\n    headers: new Headers({\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n    }),\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      res.json().then(function (response) {\n        createProject(urls, response.url, data.title, data.description, data.type);\n      });\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};\nexport var createProject = function createProject(pictures, thumbnail, title, description, type) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var project = {\n    'title': title,\n    'type': type,\n    'thumbnail': thumbnail,\n    'description': description,\n    'picutures': pictures\n  };\n  fetch(\"http://localhost:5000/api/project/uploadproject\", {\n    headers: new Headers({\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n    }),\n    method: \"POST\",\n    body: JSON.stringify(project)\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["ACCESS_TOKEN","headers","Headers","login","user","append","fetch","method","body","JSON","stringify","then","response","json","data","accessToken","deleteProject","projectId","localStorage","getItem","ok","fetchProjects","content","uploadImages","urls","pictures","forEach","file","formData","FormData","res","push","url","length","uploadThumbnail","status","alert","e","thumbnail","createProject","title","description","type","project"],"mappings":"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","sourcesContent":["import {ACCESS_TOKEN} from './constants'\n\nconst headers = new Headers ({\n  'Access-Control-Allow-Origin':'*'\n});\n\nexport const login = (user) => {\n  headers.append('Content-Type', 'application/json')\n  return fetch(\"http://localhost:5000/api/auth/signin\", \n  {\n    headers: new Headers ({\n      'Access-Control-Allow-Origin':'*',\n      'Content-Type': 'application/json'\n    }),\n    method: \"POST\",\n    body: JSON.stringify(user)\n  })  \n  .then(response => response.json())\n  .then(data => data.accessToken)\n}\n\nexport const deleteProject = (projectId) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  return fetch(\"http://localhost:5000/api/project/deleteproject/\" + projectId,\n  {\n    headers: headers,\n    method: \"DELETE\",\n  })  \n  .then(response => response.ok)\n};\n\nexport const fetchProjects = () => {\n  return fetch(`http://localhost:5000/api/project?`, {\n    headers,\n    method: \"GET\",\n  })\n  .then(response => response.json())\n  .then(data => data.content)    \n};\n\nexport const uploadImages = (data) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  var urls = []\n  data.pictures.forEach((file) => {\n    let formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", \n    {\n      headers: new Headers ({\n        'Access-Control-Allow-Origin':'*',\n        'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n      }),\n      method: \"POST\",\n      body: formData\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((response) => {\n          urls.push(response.url)\n          if(urls.length === data.pictures.length){\n            uploadThumbnail(urls, data)\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  })\n}\n\nexport const uploadThumbnail = (urls, data) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  let formData = new FormData();\n  formData.append('file', data.thumbnail);\n  fetch(\"http://localhost:5000/api/project/uploadImage\", \n  {\n    headers: new Headers ({\n      'Access-Control-Allow-Origin':'*',\n      'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n    }),\n    method: \"POST\",\n    body: formData\n  }).then((res) => {\n    if (res.ok) {\n      res.json().then((response) => {\n        createProject(urls, response.url, data.title, data.description, data.type)\n      });\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n\nexport const createProject = (pictures, thumbnail, title, description, type) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  let project = {\n    'title': title,\n    'type': type,\n    'thumbnail': thumbnail,\n    'description': description,\n    'picutures': pictures\n  }\n  fetch(\"http://localhost:5000/api/project/uploadproject\", \n  {\n    headers: new Headers ({\n      'Access-Control-Allow-Origin':'*',\n      'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n    }),\n    method: \"POST\",\n    body: JSON.stringify(project)\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n\n"]},"metadata":{},"sourceType":"module"}