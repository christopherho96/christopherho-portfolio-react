{"ast":null,"code":"import { ACCESS_TOKEN } from './constants';\nvar headers = new Headers({\n  'Access-Control-Allow-Origin': '*',\n  'Content-Type': 'application/json'\n});\nvar formImageUploadHeaders = new Headers({\n  'Access-Control-Allow-Origin': '*',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n});\nexport var login = function login(user) {\n  return fetch(\"http://localhost:5000/api/auth/signin\", {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.accessToken;\n  });\n};\nexport var deleteProject = function deleteProject(projectId) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  return fetch(\"http://localhost:5000/api/project/deleteproject/\" + projectId, {\n    headers: headers,\n    method: \"DELETE\"\n  }).then(function (response) {\n    return response.ok;\n  });\n};\nexport var fetchProjects = function fetchProjects() {\n  return fetch(\"http://localhost:5000/api/project?\", {\n    headers: headers,\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.content;\n  });\n};\nexport var uploadImage = function uploadImage(picture) {\n  var formData = new FormData();\n  formData.append('file', picture);\n  return fetch(\"http://localhost:5000/api/project/uploadImage\", {\n    headers: formImageUploadHeaders,\n    method: \"POST\",\n    body: formData\n  }).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n};\nexport var createProject = function createProject(pictures, thumbnail, title, description, type) {\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var project = {\n    'title': title,\n    'type': type,\n    'thumbnail': thumbnail,\n    'description': description,\n    'pictures': pictures\n  };\n  return fetch(\"http://localhost:5000/api/project/uploadproject\", {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(project)\n  }).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["ACCESS_TOKEN","headers","Headers","formImageUploadHeaders","localStorage","getItem","login","user","fetch","method","body","JSON","stringify","then","response","json","data","accessToken","deleteProject","projectId","append","ok","fetchProjects","content","uploadImage","picture","formData","FormData","Promise","reject","createProject","pictures","thumbnail","title","description","type","project"],"mappings":"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","sourcesContent":["import { ACCESS_TOKEN } from './constants'\n\nconst headers = new Headers ({\n  'Access-Control-Allow-Origin':'*',\n  'Content-Type': 'application/json'\n});\n\nconst formImageUploadHeaders = new Headers ({\n  'Access-Control-Allow-Origin':'*',\n  'Authorization': 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\n})\n\nexport const login = (user) => {\n  return fetch(\"http://localhost:5000/api/auth/signin\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(user)\n  })  \n  .then(response => response.json())\n  .then(data => data.accessToken)\n}\n\nexport const deleteProject = (projectId) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  return fetch(\"http://localhost:5000/api/project/deleteproject/\" + projectId,\n  {\n    headers: headers,\n    method: \"DELETE\",\n  })  \n  .then(response => response.ok)\n};\n\nexport const fetchProjects = () => {\n  return fetch(`http://localhost:5000/api/project?`, {\n    headers,\n    method: \"GET\",\n  })\n  .then(response => response.json())\n  .then(data => data.content)    \n};\n\nexport const uploadImage = (picture) => {\n  let formData = new FormData();\n  formData.append('file', picture);\n  return fetch(\"http://localhost:5000/api/project/uploadImage\", \n  {\n    headers: formImageUploadHeaders,\n    method: \"POST\",\n    body: formData\n  }).then(response => \n    response.json().then(json => {\n        if(!response.ok) {\n            return Promise.reject(json);\n        }\n        return json;\n    })\n  ); \n}\n\nexport const createProject = (pictures, thumbnail, title, description, type) => {\n  if(localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n  }\n  let project = {\n    'title': title,\n    'type': type,\n    'thumbnail': thumbnail,\n    'description': description,\n    'pictures': pictures\n  }\n  return fetch(\"http://localhost:5000/api/project/uploadproject\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(project)\n  }).then(response=> \n    response.json().then(json => {\n        if(!response.ok) {\n            return Promise.reject(json);\n        }\n        return json;\n    })\n  ); \n}\n\n"]},"metadata":{},"sourceType":"module"}