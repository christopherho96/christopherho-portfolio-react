{"ast":null,"code":"import _defineProperty from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/ProjectForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport $ from 'jquery';\nimport axios from 'axios';\nvar styles = {\n  paper: {\n    maxWidth: 700,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40\n  },\n  field: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  container: {\n    marginRight: 40,\n    marginLeft: 40,\n    position: 'relative'\n  },\n  dropzone: {\n    marginTop: 20\n  },\n  submitButton: {\n    marginTop: 20,\n    marginBottom: 20\n  }\n};\nexport var ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this, props));\n\n    _this.handleChange = function (fieldName) {\n      return function (event) {\n        _this.setState(_defineProperty({}, fieldName, event.target.value));\n      };\n    };\n\n    _this.handleImageDrop = function (fieldName) {\n      return function (event) {\n        for (var i = 0; i < event.length; i++) {\n          console.log(event[i]);\n        }\n\n        _this.setState(_defineProperty({}, fieldName, event));\n      };\n    };\n\n    _this.createProject = function () {\n      console.log(_this.state); // let data = new FormData();\n      // data.append(\"data\", this.state)\n      // fetch(\"http://localhost:5000/api/project/uploadProject\", \n      // {\n      //   // headers :{\n      //   //   \"Content-Type\": \"multipart/form-data; boundary=AaB03x\"\n      //   // },\n      //   mode: 'no-cors',\n      //   method: \"POST\",\n      //   body: data\n      // }).then(function (res) {\n      //   if (res.ok) {\n      //     alert(\"Perfect! \");\n      //   } else if (res.status == 401) {\n      //     alert(\"Oops! \");\n      //   }\n      // }, function (e) {\n      //   alert(\"Error submitting form!\");\n      // });\n\n      var formData = new FormData();\n      formData.append('title', _this.state.title);\n      formData.append('description', _this.state.description);\n      formData.append('pictures', _this.state.pictures); // axios.post(ENDPOINT,\n      //   formData, \n      //   headers: {\n      //     'Authorization': //...,\n      //     'Content-Type': 'application/json'\n      //   }\n      //   ).then(({data}) => {\n      //     //...\n      //   })\n      //   .catch(({response}) => {\n      //     //...\n      //   });\n\n      axios.post(\"http://localhost:5000/api/project/uploadProject\", formData); // var data = new FormData();\n      //   data.append(\"data\", this.state);\n      //   $.ajax({\n      //       method: \"POST\",\n      //       url: \"http://localhost:5000/api/project/uploadProject\",\n      //       data: data,\n      //       dataType: 'json',\n      //       cache: false,\n      //       processData: false,\n      //       contentType: false,\n      //       mode: 'no-cors'\n      //   }).done((data) => {\n      //       //resolve(data);\n      //   }).fail((err) => {\n      //       //console.log(\"errorrr for file upload\", err);\n      //       //reject(err);\n      //   });\n    };\n\n    _this.state = {\n      title: '',\n      description: '',\n      pictures: {}\n    };\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        value: this.state.name,\n        onChange: this.handleChange('title'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-description\",\n        label: \"Description\",\n        value: this.state.description,\n        onChange: this.handleChange('description'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.dropzone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(DropzoneArea, {\n        onChange: this.handleImageDrop('pictures'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: styles.submitButton,\n        onClick: function onClick() {\n          _this2.createProject();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Create Project\"))))));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\nexport default connect(null, null)(ProjectForm);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/ProjectForm.js"],"names":["React","connect","TextField","Paper","Grid","DropzoneArea","Button","$","axios","styles","paper","maxWidth","marginLeft","marginRight","paddingRight","paddingLeft","field","container","position","dropzone","marginTop","submitButton","marginBottom","ProjectForm","props","handleChange","fieldName","event","setState","target","value","handleImageDrop","i","length","console","log","createProject","state","formData","FormData","append","title","description","pictures","post","name","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,WAAW,EAAE,MAHR;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,WAAW,EAAE;AALR,GADM;AAQbC,EAAAA,KAAK,EAAE;AACLH,IAAAA,WAAW,EAAE,EADR;AAELD,IAAAA,UAAU,EAAE;AAFP,GARM;AAYbK,EAAAA,SAAS,EAAC;AACRJ,IAAAA,WAAW,EAAE,EADL;AAERD,IAAAA,UAAU,EAAE,EAFJ;AAGRM,IAAAA,QAAQ,EAAE;AAHF,GAZG;AAiBbC,EAAAA,QAAQ,EAAC;AACPC,IAAAA,SAAS,EAAE;AADJ,GAjBI;AAoBbC,EAAAA,YAAY,EAAC;AACXD,IAAAA,SAAS,EAAE,EADA;AAEXE,IAAAA,YAAY,EAAE;AAFH;AApBA,CAAf;AA0BA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AACE,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UASnBC,YATmB,GASJ,UAAAC,SAAS;AAAA,aAAI,UAAAC,KAAK,EAAI;AACnC,cAAKC,QAAL,qBACGF,SADH,EACgBC,KAAK,CAACE,MAAN,CAAaC,KAD7B;AAGD,OAJuB;AAAA,KATL;;AAAA,UAenBC,eAfmB,GAeD,UAAAL,SAAS;AAAA,aAAI,UAAAC,KAAK,EAAI;AACtC,aAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCE,UAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACK,CAAD,CAAjB;AACD;;AACD,cAAKJ,QAAL,qBACGF,SADH,EACgBC,KADhB;AAGD,OAP0B;AAAA,KAfR;;AAAA,UAwBnBS,aAxBmB,GAwBH,YAAO;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKE,KAAjB,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,MAAKH,KAAL,CAAWI,KAApC;AACAH,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,MAAKH,KAAL,CAAWK,WAA1C;AACAJ,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,MAAKH,KAAL,CAAWM,QAAvC,EAxBqB,CA2BnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEFnC,MAAAA,KAAK,CAACoC,IAAN,CAAW,iDAAX,EAA8DN,QAA9D,EAxCqB,CAyCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAlFkB;;AAEjB,UAAKD,KAAL,GAAa;AACXI,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;AARH;AAAA;AAAA,6BAqFU;AAAA;;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAI,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,KAAK,EAAElC,MAAM,CAACQ,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAIR,MAAM,CAACC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,eADL;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,KAAK,EAAE,KAAK2B,KAAL,CAAWQ,IAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKpB,YAAL,CAAkB,OAAlB,CAJZ;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,OAAO,EAAC,UANV;AAOE,QAAA,SAAS,EAAE,IAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAYE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,sBADL;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,KAAK,EAAE,KAAKY,KAAL,CAAWK,WAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKjB,YAAL,CAAkB,aAAlB,CAJZ;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,OAAO,EAAC,UANV;AAOE,QAAA,SAAS,EAAE,IAPb;AAQE,QAAA,SAAS,EAAE,IARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,EAwBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,EAAhB;AAAmB,QAAA,KAAK,EAAIhB,MAAM,CAACU,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAE,KAAKY,eAAL,CAAqB,UAArB,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAxBF,EA6BE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACA,QAAA,OAAO,EAAC,WADR;AAEA,QAAA,KAAK,EAAC,SAFN;AAGA,QAAA,KAAK,EAAEtB,MAAM,CAACY,YAHd;AAIA,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACe,aAAL;AAAqB,SAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CA7BF,CADF,CADF,CADJ,CADF;AA+CD;AArIH;;AAAA;AAAA,EAAiCpC,KAAK,CAAC8C,SAAvC;AAwIA,eAAe7C,OAAO,CAAC,IAAD,EAAM,IAAN,CAAP,CAAmBsB,WAAnB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport $ from 'jquery';\nimport axios from 'axios';\n\nconst styles = {\n  paper: {\n    maxWidth: 700,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40,\n  },\n  field: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  container:{\n    marginRight: 40,\n    marginLeft: 40,\n    position: 'relative',\n  },\n  dropzone:{\n    marginTop: 20,\n  },\n  submitButton:{\n    marginTop: 20,\n    marginBottom: 20,\n  },\n};\n\nexport class ProjectForm extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      pictures: {}\n    };\n  }\n\n  handleChange = fieldName => event => {\n    this.setState({ \n      [fieldName] : event.target.value\n    })\n  };\n\n  handleImageDrop = fieldName => event => {\n    for(var i = 0; i < event.length; i++){\n      console.log(event[i]);\n    }\n    this.setState({ \n      [fieldName] : event\n    })\n  }\n\n  createProject = () =>  {\n    console.log(this.state);\n    // let data = new FormData();\n    // data.append(\"data\", this.state)\n    // fetch(\"http://localhost:5000/api/project/uploadProject\", \n    // {\n    //   // headers :{\n    //   //   \"Content-Type\": \"multipart/form-data; boundary=AaB03x\"\n    //   // },\n    //   mode: 'no-cors',\n    //   method: \"POST\",\n    //   body: data\n    // }).then(function (res) {\n    //   if (res.ok) {\n    //     alert(\"Perfect! \");\n    //   } else if (res.status == 401) {\n    //     alert(\"Oops! \");\n    //   }\n    // }, function (e) {\n    //   alert(\"Error submitting form!\");\n    // });\n    let formData = new FormData();\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    formData.append('pictures', this.state.pictures);\n\n  \n      // axios.post(ENDPOINT,\n      //   formData, \n      //   headers: {\n      //     'Authorization': //...,\n      //     'Content-Type': 'application/json'\n      //   }\n      //   ).then(({data}) => {\n      //     //...\n      //   })\n      //   .catch(({response}) => {\n      //     //...\n      //   });\n\n    axios.post(\"http://localhost:5000/api/project/uploadProject\", formData);\n    // var data = new FormData();\n    //   data.append(\"data\", this.state);\n    //   $.ajax({\n    //       method: \"POST\",\n    //       url: \"http://localhost:5000/api/project/uploadProject\",\n    //       data: data,\n    //       dataType: 'json',\n    //       cache: false,\n    //       processData: false,\n    //       contentType: false,\n    //       mode: 'no-cors'\n    //   }).done((data) => {\n    //       //resolve(data);\n    //   }).fail((err) => {\n    //       //console.log(\"errorrr for file upload\", err);\n    //       //reject(err);\n    //   });\n  }\n\n  render(){\n    return (\n      <div>\n          <Grid container spacing = {24}>\n            <Grid item xs={12} style={styles.container}>\n              <Paper style = {styles.paper}>\n                <Grid item xs= {12}>\n                  <TextField\n                    id=\"outlined-name\"\n                    label=\"Name\"\n                    value={this.state.name}\n                    onChange={this.handleChange('title')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                  />\n                </Grid>\n                <Grid item xs= {12}>\n                  <TextField\n                    id=\"outlined-description\"\n                    label=\"Description\"\n                    value={this.state.description}\n                    onChange={this.handleChange('description')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    multiline={true}\n                    fullWidth={true}\n                  />\n                </Grid>\n                <Grid item xs= {12}style = {styles.dropzone}>\n                  <DropzoneArea \n                    onChange={this.handleImageDrop('pictures')}\n                    />\n                </Grid>\n                <Grid item xs= {12}>\n                  <Button \n                  variant=\"contained\" \n                  color=\"primary\" \n                  style={styles.submitButton}\n                  onClick={() => { this.createProject()}}>\n                    Create Project\n                  </Button>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(null,null)(ProjectForm);"]},"metadata":{},"sourceType":"module"}