{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar WheelReact = {};\nWheelReact.pauseWheelEvent = false;\nWheelReact._config = {};\n\nWheelReact.config = function (config) {\n  var options = ['right', 'left', 'up', 'down'];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var option = _step.value;\n\n      if (config.hasOwnProperty(option)) {\n        WheelReact._config[option] = config[option];\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nWheelReact.events = {\n  onWheel: function onWheel(e) {\n    if (WheelReact.pauseWheelEvent) {\n      return;\n    }\n\n    if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) {\n      if (e.deltaX > 0 && WheelReact._config.hasOwnProperty('left')) {\n        WheelReact._config.left();\n      } else if (e.deltaX < 0 && WheelReact._config.hasOwnProperty('right')) {\n        WheelReact._config.right();\n      }\n    } else {\n      if (e.deltaY > 0 && WheelReact._config.hasOwnProperty('up')) {\n        WheelReact._config.up();\n      } else if (e.deltaY < 0 && WheelReact._config.hasOwnProperty('down')) {\n        WheelReact._config.down();\n      }\n    }\n\n    WheelReact.pauseWheelEvent = true;\n    WheelReact.timeout = setTimeout(function () {\n      WheelReact.pauseWheelEvent = false;\n    }, 200);\n  }\n};\n\nWheelReact.clearTimeout = function () {\n  if (WheelReact.timeout) {\n    clearTimeout(WheelReact.timeout);\n  }\n};\n\nexports.default = WheelReact;","map":null,"metadata":{},"sourceType":"script"}