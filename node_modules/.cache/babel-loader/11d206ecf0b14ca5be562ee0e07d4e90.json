{"ast":null,"code":"var _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/ProjectDialog.js\";\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PropTypes from 'prop-types';\nimport ImageGallery from 'react-image-gallery';\nimport Grid from '@material-ui/core/Grid';\nimport Thumbnails from './Thumbnails';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nvar images = function images(pictures) {\n  if (pictures) {\n    return pictures.map(function (picture) {\n      return {\n        original: picture.url,\n        thumbnail: picture.url\n      };\n    });\n  }\n};\n\nvar styles = {\n  showCaseContentLeft: {},\n  showCaseContentRight: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  }\n};\n\nvar ProjectDialog = function ProjectDialog(_ref) {\n  var showDialog = _ref.showDialog,\n      closeDialog = _ref.closeDialog,\n      projectsFound = _ref.projectsFound,\n      project = _ref.project,\n      selectProject = _ref.selectProject,\n      shouldShowProjectThumbnails = _ref.shouldShowProjectThumbnails,\n      scroll = _ref.scroll;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: showDialog,\n    onClose: closeDialog,\n    scroll: scroll,\n    maxWidth: 'md',\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    style: styles.gallery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, shouldShowProjectThumbnails ? React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Thumbnails, {\n    projects: projectsFound,\n    selectProject: selectProject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: styles.showcaseContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: styles.showCaseContentLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ImageGallery, {\n    items: images(project.pictures),\n    showFullscreenButton: false,\n    showPlayButton: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: styles.showCaseContentRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, project.title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, project.type), React.createElement(\"p\", {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, project.description), project.linkReference ? React.createElement(\"a\", {\n    href: project.linkReference,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Click here for more information\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))))));\n};\n\nexport default ProjectDialog;\nProjectDialog.propTypes = {\n  project: PropTypes.object.isRequired,\n  showDialog: PropTypes.bool.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  scroll: PropTypes.string.isRequired\n};\nProjectDialog.defaultProps = {\n  scroll: 'body'\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/ProjectDialog.js"],"names":["React","Dialog","DialogContent","PropTypes","ImageGallery","Grid","Thumbnails","images","pictures","map","picture","original","url","thumbnail","styles","showCaseContentLeft","showCaseContentRight","paddingLeft","paddingRight","description","whiteSpace","ProjectDialog","showDialog","closeDialog","projectsFound","project","selectProject","shouldShowProjectThumbnails","scroll","gallery","showcaseContent","title","type","linkReference","propTypes","object","isRequired","bool","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PropTypes from 'prop-types';\nimport ImageGallery from 'react-image-gallery';\nimport Grid from '@material-ui/core/Grid';\nimport Thumbnails from './Thumbnails';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nconst images = (pictures) => {\n  if(pictures){\n    return pictures.map( picture => {\n      return {\n        original: picture.url,\n        thumbnail: picture.url,\n      }\n    })\n  }\n}\n\nconst styles = {\n  showCaseContentLeft:{\n  },\n  showCaseContentRight:{\n    paddingLeft:20,\n    paddingRight: 20\n  },\n  description:{\n    whiteSpace: 'pre-line'\n  }\n};\n\nconst ProjectDialog = ({\n  showDialog,\n  closeDialog,\n  projectsFound,\n  project,\n  selectProject,\n  shouldShowProjectThumbnails,\n  scroll,\n}) => {\n  return (\n      <div>\n        <Dialog\n          open={showDialog}\n          onClose={closeDialog}\n          scroll={scroll}\n          maxWidth={'md'}\n          aria-labelledby=\"scroll-dialog-title\"\n        >\n          <DialogContent style={styles.gallery}>\n          {shouldShowProjectThumbnails ? (          \n            <Grid container spacing={0}>\n              <Grid item xs={12}>\n                <Thumbnails \n                  projects={projectsFound}\n                  selectProject={selectProject}\n                />\n                </Grid>\n            </Grid>) : (<div></div>)\n          }\n          <Grid container spacing ={0} style={styles.showcaseContent}>\n              <Grid item xs={12} sm={6} style={styles.showCaseContentLeft}>\n              <ImageGallery   \n                items={images(project.pictures)}\n                showFullscreenButton={false}\n                showPlayButton={false} \n                />\n              </Grid>\n              <Grid item xs={12} sm={6} style={styles.showCaseContentRight}>\n                <h2>{project.title}</h2>\n                <h4>{project.type}</h4>\n                <p style={styles.description}>\n                {project.description}\n                </p>\n                {project.linkReference? (<a href={project.linkReference} target=\"_blank\">Click here for more information</a>): (<div></div>)}\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Dialog>\n      </div>\n  );\n};\n\nexport default ProjectDialog;\n\nProjectDialog.propTypes = {\n  project: PropTypes.object.isRequired,\n  showDialog: PropTypes.bool.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  scroll: PropTypes.string.isRequired\n};\n\nProjectDialog.defaultProps = {\n  scroll: 'body'\n};\n"]},"metadata":{},"sourceType":"module"}