{"ast":null,"code":"import _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase from './Showcase';\nimport PortfolioCarousel from './PortfolioCarousel';\nimport ProjectDialog from './ProjectDialog';\nimport { getProjects as _getProjects, openProjectDialog, closeProjectDialog } from './redux/actions';\nimport { projectsFound, isProjectDialogOpen } from './redux/selectors';\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }]);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      showProjectDialog: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"openProjectDialog\",\n    value: function openProjectDialog() {\n      this.setState({\n        showProjectDialog: true\n      });\n    }\n  }, {\n    key: \"closeProjectDialog\",\n    value: function closeProjectDialog() {\n      this.setState({\n        showProjectDialog: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          projectsFound = _this$props.projectsFound,\n          openEditDeveloperDialog = _this$props.openEditDeveloperDialog,\n          closeEditDeveloperDialog = _this$props.closeEditDeveloperDialog,\n          isProjectDialogOpen = _this$props.isProjectDialogOpen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Showcase, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(PortfolioCarousel, {\n        projectsFound: projectsFound,\n        openProjectDialog: openEditDeveloperDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(ProjectDialog, {\n        project: {},\n        showDialog: isProjectDialogOpen,\n        closeDialog: closeEditDeveloperDialog,\n        scroll: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectsFound: projectsFound(state),\n    isProjectDialogOpen: isProjectDialogOpen(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProjects: function getProjects() {\n      return dispatch(_getProjects());\n    },\n    openEditDeveloperDialog: function openEditDeveloperDialog(projectData) {\n      return dispatch(openProjectDialog(projectData));\n    },\n    closeEditDeveloperDialog: function closeEditDeveloperDialog() {\n      return dispatch(closeProjectDialog());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js"],"names":["React","connect","Showcase","PortfolioCarousel","ProjectDialog","getProjects","openProjectDialog","closeProjectDialog","projectsFound","isProjectDialogOpen","Home","props","state","showProjectDialog","setState","openEditDeveloperDialog","closeEditDeveloperDialog","Component","mapStateToProps","mapDispatchToProps","dispatch","projectData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,WAAW,IAAXA,YADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,iBAJP;AAKA,SACEC,aADF,EAEEC,mBAFF,QAGO,mBAHP;AAKA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAEsB;AAClB,WAAKC,KAAL,CAAWN,WAAX;AACD;AAJH;;AAME,gBAAYM,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAFiB;AAKlB;;AAXH;AAAA;AAAA,wCAaqB;AACjB,WAAKC,QAAL,CAAc;AAACD,QAAAA,iBAAiB,EAAE;AAApB,OAAd;AACD;AAfH;AAAA;AAAA,yCAiBsB;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA,iBAAiB,EAAE;AAApB,OAAd;AACD;AAnBH;AAAA;AAAA,6BAqBU;AAAA,wBAMF,KAAKF,KANH;AAAA,UAEJH,aAFI,eAEJA,aAFI;AAAA,UAGJO,uBAHI,eAGJA,uBAHI;AAAA,UAIJC,wBAJI,eAIJA,wBAJI;AAAA,UAKJP,mBALI,eAKJA,mBALI;AAON,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,iBAAD;AACE,QAAA,aAAa,EAAID,aADnB;AAEE,QAAA,iBAAiB,EAAIO,uBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAOE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAE,EADX;AAEE,QAAA,UAAU,EAAEN,mBAFd;AAGE,QAAA,WAAW,EAAEO,wBAHf;AAIE,QAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAgBD;AA5CH;;AAAA;AAAA,EAA0BhB,KAAK,CAACiB,SAAhC;;AA+CA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAN,KAAK;AAAA,SAAK;AAChCJ,IAAAA,aAAa,EAAEA,aAAa,CAACI,KAAD,CADI;AAEhCH,IAAAA,mBAAmB,EAAEA,mBAAmB,CAACG,KAAD;AAFR,GAAL;AAAA,CAA7B;;AAKA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCf,IAAAA,WAAW,EAAE;AAAA,aAAMe,QAAQ,CAACf,YAAW,EAAZ,CAAd;AAAA,KADyB;AAEtCU,IAAAA,uBAAuB,EAAE,iCAAAM,WAAW;AAAA,aAAGD,QAAQ,CAACd,iBAAiB,CAACe,WAAD,CAAlB,CAAX;AAAA,KAFE;AAGtCL,IAAAA,wBAAwB,EAAE;AAAA,aAAMI,QAAQ,CAACb,kBAAkB,EAAnB,CAAd;AAAA;AAHY,GAAL;AAAA,CAAnC;;AAMA,eAAeN,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase  from './Showcase';\nimport PortfolioCarousel from './PortfolioCarousel';\nimport ProjectDialog from './ProjectDialog';\nimport {\n  getProjects,\n  openProjectDialog,\n  closeProjectDialog\n} from './redux/actions';\nimport {\n  projectsFound,\n  isProjectDialogOpen\n} from './redux/selectors';\n\nexport class Home extends React.Component {\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showProjectDialog: false\n    };\n  }\n\n  openProjectDialog(){\n    this.setState({showProjectDialog: true})\n  }\n\n  closeProjectDialog(){\n    this.setState({showProjectDialog: false})\n  }\n\n  render(){\n    const {\n      projectsFound,\n      openEditDeveloperDialog,\n      closeEditDeveloperDialog,\n      isProjectDialogOpen\n    } = this.props\n    return(\n      <div>\n        <Showcase>\n        </Showcase>\n        <PortfolioCarousel\n          projectsFound = {projectsFound}\n          openProjectDialog = {openEditDeveloperDialog}\n        />\n        <ProjectDialog\n          project={{}}\n          showDialog={isProjectDialogOpen}\n          closeDialog={closeEditDeveloperDialog}\n          scroll='body'\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  projectsFound: projectsFound(state),\n  isProjectDialogOpen: isProjectDialogOpen(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: () => dispatch(getProjects()),\n  openEditDeveloperDialog: projectData=> dispatch(openProjectDialog(projectData)),\n  closeEditDeveloperDialog: () => dispatch(closeProjectDialog()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}