{"ast":null,"code":"var headers = {\n  Accept: 'application/json',\n  'Access-Control-Allow-Origin': '*'\n}; // export const getProjects = () => {\n//   const query = createQuery(params);\n//   return fetch(`http://localhost:5000/api/project?`, {\n//     headers,\n//   })\n//     .then(response => {\n//       if (!response.ok) {\n//         handleErrorResponse(response);\n//       }\n//       return response;\n//     })\n//     .then(parseJson)\n//     .then(d => d);\n// };\n\nexport var uploadImages = function uploadImages(data) {\n  var urls = [];\n  data.pictures.forEach(function (file) {\n    var formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        res.json().then(function (response) {\n          urls.push(response.url);\n\n          if (urls.length === data.pictures.length) {\n            createProject(urls, data.title, data.description);\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  });\n};\nexport var createProject = function createProject(urls, title, description) {\n  var formData = new FormData();\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["headers","Accept","uploadImages","data","urls","pictures","forEach","file","formData","FormData","append","fetch","method","body","then","res","ok","json","response","push","url","length","createProject","title","description","status","alert","e"],"mappings":"AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,kBADM;AAEd,iCAA8B;AAFhB,CAAhB,C,CAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsB,UAACC,IAAD,EAAU;AAC9B,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACAI,IAAAA,KAAK,CAAC,+CAAD,EACL;AACEX,MAAAA,OAAO,EAAEA,OADX;AAEEY,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,IAAI,EAAEL;AAHR,KADK,CAAL,CAKGM,IALH,CAKQ,UAACC,GAAD,EAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACVD,QAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAACI,QAAD,EAAc;AAC5Bd,UAAAA,IAAI,CAACe,IAAL,CAAUD,QAAQ,CAACE,GAAnB;;AACA,cAAGhB,IAAI,CAACiB,MAAL,KAAgBlB,IAAI,CAACE,QAAL,CAAcgB,MAAjC,EAAwC;AACtCC,YAAAA,aAAa,CAAClB,IAAD,EAAOD,IAAI,CAACoB,KAAZ,EAAmBpB,IAAI,CAACqB,WAAxB,CAAb;AACD;AACF,SALD;AAMD,OAPD,MAOO,IAAIT,GAAG,CAACU,MAAJ,IAAc,GAAlB,EAAuB;AAC5BC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,KAhBD,EAgBG,UAAUC,CAAV,EAAa;AACdD,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAlBD;AAmBD,GAtBD;AAuBD,CAzBM;AA2BP,OAAO,IAAMJ,aAAa,GAAG,SAAhBA,aAAgB,CAAClB,IAAD,EAAOmB,KAAP,EAAcC,WAAd,EAA8B;AACzD,MAAIhB,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBa,KAAzB;AACAf,EAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+Bc,WAA/B;AACAhB,EAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BN,IAA5B;AACAO,EAAAA,KAAK,CAAC,iDAAD,EACL;AACEX,IAAAA,OAAO,EAAEA,OADX;AAEEY,IAAAA,MAAM,EAAE,MAFV;AAGEC,IAAAA,IAAI,EAAEL;AAHR,GADK,CAAL,CAKGM,IALH,CAKQ,UAAUC,GAAV,EAAe;AACrB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACVU,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KAFD,MAEO,IAAIX,GAAG,CAACU,MAAJ,IAAc,GAAlB,EAAuB;AAC5BC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,GAXD,EAWG,UAAUC,CAAV,EAAa;AACdD,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,GAbD;AAcD,CAnBM","sourcesContent":["const headers = {\n  Accept: 'application/json',\n  'Access-Control-Allow-Origin':'*'\n};\n\n// export const getProjects = () => {\n//   const query = createQuery(params);\n\n//   return fetch(`http://localhost:5000/api/project?`, {\n//     headers,\n//   })\n//     .then(response => {\n//       if (!response.ok) {\n//         handleErrorResponse(response);\n//       }\n//       return response;\n//     })\n//     .then(parseJson)\n//     .then(d => d);\n// };\n\nexport const uploadImages = (data) => {\n  var urls = []\n  data.pictures.forEach((file) => {\n    let formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", \n    {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((response) => {\n          urls.push(response.url)\n          if(urls.length === data.pictures.length){\n            createProject(urls, data.title, data.description)\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  })\n}\n\nexport const createProject = (urls, title, description) => {\n  let formData = new FormData();\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n"]},"metadata":{},"sourceType":"module"}