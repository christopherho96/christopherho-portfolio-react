{"ast":null,"code":"var headers = new Headers({\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n});\nexport var login = function login(user) {\n  fetch(\"http://localhost:5000/api/auth/signin\", {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(user)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data.accessToken);\n  });\n};\nexport var fetchProjects = function fetchProjects() {\n  return fetch(\"http://localhost:5000/api/project?\", {\n    headers: headers,\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data.content;\n  });\n};\nexport var uploadImages = function uploadImages(data) {\n  var urls = [];\n  data.pictures.forEach(function (file) {\n    var formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        res.json().then(function (response) {\n          urls.push(response.url);\n\n          if (urls.length === data.pictures.length) {\n            uploadThumbnail(urls, data);\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  });\n};\nexport var uploadThumbnail = function uploadThumbnail(urls, data) {\n  var formData = new FormData();\n  formData.append('file', data.thumbnail);\n  fetch(\"http://localhost:5000/api/project/uploadImage\", {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      res.json().then(function (response) {\n        createProject(urls, response.url, data.title, data.description, data.type);\n      });\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};\nexport var createProject = function createProject(urls, thumbnail, title, description, type) {\n  var formData = new FormData();\n  formData.append('title', title);\n  formData.append('type', type);\n  formData.append('thumbnail', thumbnail);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["headers","Headers","login","user","fetch","method","body","JSON","stringify","then","response","json","data","console","log","accessToken","fetchProjects","content","uploadImages","urls","pictures","forEach","file","formData","FormData","append","res","ok","push","url","length","uploadThumbnail","status","alert","e","thumbnail","createProject","title","description","type"],"mappings":"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","sourcesContent":["const headers = new Headers ({\n  'Content-Type' : 'application/json',\n  'Access-Control-Allow-Origin':'*'\n});\n\nexport const login = (user) => {\n  fetch(\"http://localhost:5000/api/auth/signin\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: JSON.stringify(user)\n  })  \n  .then(response => response.json())\n  .then(data => {\n    console.log(data.accessToken)\n  })    \n}\n\nexport const fetchProjects = () => {\n\n  return fetch(`http://localhost:5000/api/project?`, {\n    headers,\n    method: \"GET\",\n  })\n  .then(response => response.json())\n  .then(data => data.content)    \n};\n\nexport const uploadImages = (data) => {\n  var urls = []\n  data.pictures.forEach((file) => {\n    let formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", \n    {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((response) => {\n          urls.push(response.url)\n          if(urls.length === data.pictures.length){\n            uploadThumbnail(urls, data)\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  })\n}\n\nexport const uploadThumbnail = (urls, data) => {\n  let formData = new FormData();\n  formData.append('file', data.thumbnail);\n  fetch(\"http://localhost:5000/api/project/uploadImage\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then((res) => {\n    if (res.ok) {\n      res.json().then((response) => {\n        createProject(urls, response.url, data.title, data.description, data.type)\n      });\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n\nexport const createProject = (urls, thumbnail, title, description, type) => {\n  let formData = new FormData();\n  formData.append('title', title);\n  formData.append('type', type);\n  formData.append('thumbnail', thumbnail)\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n\n"]},"metadata":{},"sourceType":"module"}