{"ast":null,"code":"import _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase from './Showcase';\nimport ProjectDialog from './ProjectDialog';\nimport FbImageLibrary from 'react-fb-image-grid';\nimport { getProjects as _getProjects, openProjectDialog, closeProjectDialog } from './redux/actions';\nimport { projectsFound, isProjectDialogOpen } from './redux/selectors';\nvar styles = {\n  grid: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 700\n  },\n  thumbnail: {\n    cursor: 'pointer',\n    maxWidth: '100',\n    height: 'auto'\n  }\n};\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          projectsFound = _this$props.projectsFound,\n          openEditDeveloperDialog = _this$props.openEditDeveloperDialog,\n          closeEditDeveloperDialog = _this$props.closeEditDeveloperDialog,\n          isProjectDialogOpen = _this$props.isProjectDialogOpen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Showcase, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(FbImageLibrary, {\n        images: projectsFound.map(function (project) {\n          return project.thumbnail;\n        }),\n        onClickEach: function onClickEach(_ref) {\n          var src = _ref.src,\n              index = _ref.index;\n          return openEditDeveloperDialog();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(ProjectDialog, {\n        project: {},\n        showDialog: isProjectDialogOpen,\n        closeDialog: closeEditDeveloperDialog,\n        scroll: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectsFound: projectsFound(state),\n    isProjectDialogOpen: isProjectDialogOpen(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProjects: function getProjects() {\n      return dispatch(_getProjects());\n    },\n    openEditDeveloperDialog: function openEditDeveloperDialog(projectData) {\n      return dispatch(openProjectDialog(projectData));\n    },\n    closeEditDeveloperDialog: function closeEditDeveloperDialog() {\n      return dispatch(closeProjectDialog());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js"],"names":["React","connect","Showcase","ProjectDialog","FbImageLibrary","getProjects","openProjectDialog","closeProjectDialog","projectsFound","isProjectDialogOpen","styles","grid","marginLeft","marginRight","width","thumbnail","cursor","maxWidth","height","Home","props","openEditDeveloperDialog","closeEditDeveloperDialog","map","project","src","index","Component","mapStateToProps","state","mapDispatchToProps","dispatch","projectData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SACEC,WAAW,IAAXA,YADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,iBAJP;AAKA,SACEC,aADF,EAEEC,mBAFF,QAGO,mBAHP;AAKA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAG;AACLC,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,WAAW,EAAE,MAFR;AAGLC,IAAAA,KAAK,EAAE;AAHF,GADM;AAObC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAC,SADE;AAETC,IAAAA,QAAQ,EAAE,KAFD;AAGTC,IAAAA,MAAM,EAAE;AAHC;AAPE,CAAf;AAeA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAEsB;AAClB,WAAKC,KAAL,CAAWf,WAAX;AACD;AAJH;AAAA;AAAA,6BAKU;AAAA,wBAMF,KAAKe,KANH;AAAA,UAEJZ,aAFI,eAEJA,aAFI;AAAA,UAGJa,uBAHI,eAGJA,uBAHI;AAAA,UAIJC,wBAJI,eAIJA,wBAJI;AAAA,UAKJb,mBALI,eAKJA,mBALI;AAQN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAGD,aAAa,CAACe,GAAd,CAAmB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACT,SAAZ;AAAA,SAA1B,CAAzB;AAA4E,QAAA,WAAW,EAAE;AAAA,cAAEU,GAAF,QAAEA,GAAF;AAAA,cAAOC,KAAP,QAAOA,KAAP;AAAA,iBAAkBL,uBAAuB,EAAzC;AAAA,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAE,EADX;AAEE,QAAA,UAAU,EAAEZ,mBAFd;AAGE,QAAA,WAAW,EAAEa,wBAHf;AAIE,QAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAiBD;AA9BH;;AAAA;AAAA,EAA0BtB,KAAK,CAAC2B,SAAhC;;AAiCA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCrB,IAAAA,aAAa,EAAEA,aAAa,CAACqB,KAAD,CADI;AAEhCpB,IAAAA,mBAAmB,EAAEA,mBAAmB,CAACoB,KAAD;AAFR,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtC1B,IAAAA,WAAW,EAAE;AAAA,aAAM0B,QAAQ,CAAC1B,YAAW,EAAZ,CAAd;AAAA,KADyB;AAEtCgB,IAAAA,uBAAuB,EAAE,iCAAAW,WAAW;AAAA,aAAGD,QAAQ,CAACzB,iBAAiB,CAAC0B,WAAD,CAAlB,CAAX;AAAA,KAFE;AAGtCV,IAAAA,wBAAwB,EAAE;AAAA,aAAMS,QAAQ,CAACxB,kBAAkB,EAAnB,CAAd;AAAA;AAHY,GAAL;AAAA,CAAnC;;AAMA,eAAeN,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase  from './Showcase';\nimport ProjectDialog from './ProjectDialog';\nimport FbImageLibrary from 'react-fb-image-grid'\nimport {\n  getProjects,\n  openProjectDialog,\n  closeProjectDialog\n} from './redux/actions';\nimport {\n  projectsFound,\n  isProjectDialogOpen\n} from './redux/selectors';\n\nconst styles = {\n  grid : {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 700\n  },\n\n  thumbnail: {\n    cursor:'pointer',\n    maxWidth: '100',\n    height: 'auto',\n  }\n};\n\n\nexport class Home extends React.Component {\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render(){\n    const {\n      projectsFound,\n      openEditDeveloperDialog,\n      closeEditDeveloperDialog,\n      isProjectDialogOpen\n    } = this.props\n    \n    return(\n      <div>\n        <Showcase>\n        </Showcase>\n        {/* <PortfolioCarousel\n          projectsFound = {projectsFound}\n          openProjectDialog = {openEditDeveloperDialog}\n        /> */}\n        <FbImageLibrary images={ projectsFound.map( project => project.thumbnail )} onClickEach={({src, index}) => openEditDeveloperDialog() }/>\n        <ProjectDialog\n          project={{}}\n          showDialog={isProjectDialogOpen}\n          closeDialog={closeEditDeveloperDialog}\n          scroll='body'\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  projectsFound: projectsFound(state),\n  isProjectDialogOpen: isProjectDialogOpen(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: () => dispatch(getProjects()),\n  openEditDeveloperDialog: projectData=> dispatch(openProjectDialog(projectData)),\n  closeEditDeveloperDialog: () => dispatch(closeProjectDialog()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}