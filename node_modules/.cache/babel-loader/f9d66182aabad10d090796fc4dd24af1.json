{"ast":null,"code":"import _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/Dashboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteDialog from './DeleteDialog';\nimport { getProjects as _getProjects, openDeleteProjectDialog as _openDeleteProjectDialog, closeDeleteProjectDialog as _closeDeleteProjectDialog, deleteSelectedProject, logoutUser } from './redux/actions';\nimport { projectsFound, isDeleteProjectDialogOpen, getProjectIdOfSelectedDeleteProject } from './redux/selectors';\nvar styles = {\n  thumbnail: {\n    height: 500\n  },\n  container: {\n    marginRight: 60,\n    marginLeft: 60\n  },\n  buttons: {\n    marginBottom: 20\n  },\n  button: {\n    marginLeft: 10,\n    marginRight: 10\n  }\n};\nexport var Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          projectsFound = _this$props.projectsFound,\n          history = _this$props.history,\n          openDeleteProjectDialog = _this$props.openDeleteProjectDialog,\n          closeDeleteProjectDialog = _this$props.closeDeleteProjectDialog,\n          isDeleteProjectDialogOpen = _this$props.isDeleteProjectDialogOpen,\n          deleteProject = _this$props.deleteProject,\n          logout = _this$props.logout;\n      return React.createElement(\"div\", {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Dashboard\"), React.createElement(\"div\", {\n        style: styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: styles.button,\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          history.push(\"/createProject\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Create Project\"), React.createElement(Button, {\n        style: styles.button,\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, projectsFound.map(function (project, index) {\n        return React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          title: project.title,\n          subheader: project.creationDateTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(CardMedia, {\n          component: \"img\",\n          src: project.thumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(CardActions, {\n          disableActionSpacing: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Share\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(EditIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(IconButton, {\n          \"aria-label\": \"Add to favorites\",\n          onClick: function onClick() {\n            return openDeleteProjectDialog(project.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(DeleteIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })))));\n      })), React.createElement(DeleteDialog, {\n        showDialog: isDeleteProjectDialogOpen,\n        closeDialog: closeDeleteProjectDialog,\n        projectId: getProjectIdOfSelectedDeleteProject,\n        deleteProject: deleteProject,\n        scroll: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectsFound: projectsFound(state),\n    isDeleteProjectDialogOpen: isDeleteProjectDialogOpen(state),\n    getProjectIdOfSelectedDeleteProject: getProjectIdOfSelectedDeleteProject(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProjects: function getProjects() {\n      return dispatch(_getProjects());\n    },\n    openDeleteProjectDialog: function openDeleteProjectDialog(projectId) {\n      return dispatch(_openDeleteProjectDialog(projectId));\n    },\n    closeDeleteProjectDialog: function closeDeleteProjectDialog() {\n      return dispatch(_closeDeleteProjectDialog());\n    },\n    deleteProject: function deleteProject(projectId) {\n      return dispatch(deleteSelectedProject(projectId));\n    },\n    logout: function logout() {\n      return dispatch(logoutUser());\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard));","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/Dashboard.js"],"names":["React","connect","withRouter","Grid","Button","Card","CardHeader","CardMedia","CardActions","IconButton","DeleteIcon","EditIcon","DeleteDialog","getProjects","openDeleteProjectDialog","closeDeleteProjectDialog","deleteSelectedProject","logoutUser","projectsFound","isDeleteProjectDialogOpen","getProjectIdOfSelectedDeleteProject","styles","thumbnail","height","container","marginRight","marginLeft","buttons","marginBottom","button","Dashboard","props","history","deleteProject","logout","push","map","project","index","title","creationDateTime","id","Component","mapStateToProps","state","mapDispatchToProps","dispatch","projectId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteDialog from './DeleteDialog';\n\nimport {\n  getProjects,\n  openDeleteProjectDialog,\n  closeDeleteProjectDialog,\n  deleteSelectedProject,\n  logoutUser\n} from './redux/actions';\nimport {\n  projectsFound,\n  isDeleteProjectDialogOpen,\n  getProjectIdOfSelectedDeleteProject\n} from './redux/selectors';\n\nconst styles = {\n  thumbnail : {\n    height: 500\n  },\n  container:{\n    marginRight: 60,\n    marginLeft: 60\n  },\n  buttons:{\n    marginBottom: 20\n  },\n  button: {\n    marginLeft: 10,\n    marginRight: 10\n  }\n};\n\nexport class Dashboard extends React.Component{\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render(){\n    const {\n      projectsFound,\n      history,\n      openDeleteProjectDialog,\n      closeDeleteProjectDialog,\n      isDeleteProjectDialogOpen,\n      deleteProject,\n      logout\n    } = this.props\n    return (\n      <div style={styles.container}>\n        <h2>Dashboard</h2>\n        <div style={styles.buttons}>\n          <Button \n            style={styles.button}\n            variant=\"contained\" \n            color=\"secondary\" \n            onClick={() => {history.push(\"/createProject\")}}>\n            Create Project\n          </Button>\n\n          <Button \n            style={styles.button}\n            variant=\"contained\" \n            color=\"secondary\" \n            onClick={() => {logout()}}>\n            Logout\n          </Button>\n        </div>\n        <Grid container spacing = {24} >\n            {projectsFound.map(function(project, index){\n              return (          \n                <Grid item xs={12} sm={6} md={3} key={index}>\n                  <Card>\n                    <CardHeader\n                      title={project.title}\n                      subheader={project.creationDateTime}\n                    />\n                    <CardMedia\n                      component=\"img\"\n                      src={project.thumbnail}\n                    />\n                    <CardActions disableActionSpacing>\n                    <IconButton aria-label=\"Share\">\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton \n                      aria-label=\"Add to favorites\"\n                      onClick={() => openDeleteProjectDialog(project.id)}\n                      >\n                        <DeleteIcon/>\n                      </IconButton>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n        </Grid>\n\n        <DeleteDialog\n            showDialog={isDeleteProjectDialogOpen}\n            closeDialog={closeDeleteProjectDialog}\n            projectId={getProjectIdOfSelectedDeleteProject}\n            deleteProject={deleteProject}\n            scroll='body'\n          />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  projectsFound: projectsFound(state),\n  isDeleteProjectDialogOpen: isDeleteProjectDialogOpen(state),\n  getProjectIdOfSelectedDeleteProject: getProjectIdOfSelectedDeleteProject(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: () => dispatch(getProjects()),\n  openDeleteProjectDialog: projectId => dispatch(openDeleteProjectDialog(projectId)),\n  closeDeleteProjectDialog: () => dispatch(closeDeleteProjectDialog()),\n  deleteProject: (projectId) => dispatch(deleteSelectedProject(projectId)),\n  logout: () => dispatch(logoutUser())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard));"]},"metadata":{},"sourceType":"module"}