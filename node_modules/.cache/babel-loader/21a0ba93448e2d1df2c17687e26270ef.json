{"ast":null,"code":"import _defineProperty from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/ProjectForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nvar styles = {\n  paper: {\n    maxWidth: 700,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40\n  },\n  field: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  container: {\n    marginRight: 40,\n    marginLeft: 40,\n    position: 'relative'\n  },\n  dropzone: {\n    marginTop: 20\n  },\n  submitButton: {\n    marginTop: 20,\n    marginBottom: 20\n  }\n};\nexport var ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this, props));\n\n    _this.handleChange = function (fieldName) {\n      return function (event) {\n        _this.setState(_defineProperty({}, fieldName, event.target.value));\n      };\n    };\n\n    _this.handleImageDrop = function (fieldName) {\n      return function (event) {\n        var files = _this.state.pictures;\n        files.push(event);\n\n        _this.setState(_defineProperty({}, fieldName, files));\n      };\n    };\n\n    _this.createProject = function (urls) {\n      var formData = new FormData();\n      formData.append('title', _this.state.title);\n      formData.append('description', _this.state.description);\n      formData.append('pictures', urls);\n      fetch(\"http://localhost:5000/api/project/uploadProject\", {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          \"Accept\": \"application/json\"\n        },\n        method: \"POST\",\n        body: formData\n      }).then(function (res) {\n        if (res.ok) {\n          alert(\"Perfect! \");\n        } else if (res.status == 401) {\n          alert(\"Oops! \");\n        }\n      }, function (e) {\n        alert(\"Error submitting form!\");\n      });\n    };\n\n    _this.uploadImages = function () {\n      var urls = [];\n      var filesUploaded = 0;\n      var numberOfFilesToUpload = _this.state.pictures.length;\n\n      _this.state.pictures.forEach(function (file) {\n        var formData = new FormData();\n        formData.append('file', file);\n        fetch(\"http://localhost:5000/api/project/uploadImage\", {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            \"Accept\": \"application/json\"\n          },\n          // mode: 'no-cors',\n          method: \"POST\",\n          body: formData\n        }).then(function (res) {\n          var _this2 = this;\n\n          if (res.ok) {\n            res.json().then(function (response) {\n              urls.push(response.url);\n              filesUploaded++;\n\n              if (filesUploaded === numberOfFilesToUpload) {\n                _this2.createProject(urls);\n              }\n            });\n          } else if (res.status == 401) {\n            alert(\"Oops! \");\n          }\n        }, function (e) {\n          alert(\"Error submitting form!\");\n        });\n      });\n    };\n\n    _this.state = {\n      title: '',\n      description: '',\n      pictures: []\n    };\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        value: this.state.name,\n        onChange: this.handleChange('title'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-description\",\n        label: \"Description\",\n        value: this.state.description,\n        onChange: this.handleChange('description'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.dropzone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(DropzoneArea, {\n        onDrop: this.handleImageDrop('pictures'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: styles.submitButton,\n        onClick: function onClick() {\n          _this3.uploadImages();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Create Project\"))))));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\nexport default connect(null, null)(ProjectForm);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/ProjectForm.js"],"names":["React","connect","TextField","Paper","Grid","DropzoneArea","Button","styles","paper","maxWidth","marginLeft","marginRight","paddingRight","paddingLeft","field","container","position","dropzone","marginTop","submitButton","marginBottom","ProjectForm","props","handleChange","fieldName","event","setState","target","value","handleImageDrop","files","state","pictures","push","createProject","urls","formData","FormData","append","title","description","fetch","headers","method","body","then","res","ok","alert","status","e","uploadImages","filesUploaded","numberOfFilesToUpload","length","forEach","file","json","response","url","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  paper: {\n    maxWidth: 700,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40,\n  },\n  field: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  container:{\n    marginRight: 40,\n    marginLeft: 40,\n    position: 'relative',\n  },\n  dropzone:{\n    marginTop: 20,\n  },\n  submitButton:{\n    marginTop: 20,\n    marginBottom: 20,\n  },\n};\n\nexport class ProjectForm extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      pictures: []\n    };\n  }\n\n  handleChange = fieldName => event => {\n    this.setState({ \n      [fieldName] : event.target.value\n    })\n  };\n\n  handleImageDrop = fieldName => event => {\n    var files = this.state.pictures\n    files.push(event)\n    this.setState({ \n      [fieldName] : files\n    })\n  }\n\n  createProject = urls =>  {\n    let formData = new FormData();\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    formData.append('pictures', urls);\n    fetch(\"http://localhost:5000/api/project/uploadProject\", \n    {\n      headers: {\n        'Access-Control-Allow-Origin':'*',\n        \"Accept\": \"application/json\"\n      },\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        alert(\"Perfect! \");\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  }\n\n  uploadImages = () => {\n    var urls = []\n    var filesUploaded= 0\n    var numberOfFilesToUpload = this.state.pictures.length\n    this.state.pictures.forEach((file) => {\n      let formData = new FormData();\n      formData.append('file', file);\n      fetch(\"http://localhost:5000/api/project/uploadImage\", \n      {\n        headers: {\n          'Access-Control-Allow-Origin':'*',\n          \"Accept\": \"application/json\"\n        },\n        // mode: 'no-cors',\n        method: \"POST\",\n        body: formData\n      }).then(function (res) {\n        if (res.ok) {\n          res.json().then(response => {\n            urls.push(response.url)\n            filesUploaded++\n            if(filesUploaded === numberOfFilesToUpload){\n              this.createProject(urls);\n            }\n        });\n       } else if (res.status == 401) {\n          alert(\"Oops! \");\n        }\n      }, function (e) {\n        alert(\"Error submitting form!\");\n      });\n    })\n  }\n\n  render(){\n    return (\n      <div>\n          <Grid container spacing = {24}>\n            <Grid item xs={12} style={styles.container}>\n              <Paper style = {styles.paper}>\n                <Grid item xs= {12}>\n                  <TextField\n                    id=\"outlined-name\"\n                    label=\"Name\"\n                    value={this.state.name}\n                    onChange={this.handleChange('title')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth={true}\n                  />\n                </Grid>\n                <Grid item xs= {12}>\n                  <TextField\n                    id=\"outlined-description\"\n                    label=\"Description\"\n                    value={this.state.description}\n                    onChange={this.handleChange('description')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    multiline={true}\n                    fullWidth={true}\n                  />\n                </Grid>\n                <Grid item xs= {12}style = {styles.dropzone}>\n                  <DropzoneArea \n                    onDrop={this.handleImageDrop('pictures')}\n                    />\n                </Grid>\n                <Grid item xs= {12}>\n                  <Button \n                  variant=\"contained\" \n                  color=\"primary\" \n                  style={styles.submitButton}\n                  onClick={() => { this.uploadImages()}}>\n                    Create Project\n                  </Button>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(null,null)(ProjectForm);"]},"metadata":{},"sourceType":"module"}