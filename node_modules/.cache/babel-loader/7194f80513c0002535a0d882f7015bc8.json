{"ast":null,"code":"import _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/ProjectGallery/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Thumbnails from './Thumbnails';\nimport ProjectView from './ProjectView';\nimport { getProjects as _getProjects, selectProject as _selectProject } from './redux/actions';\nimport { projectsFound, currentSelectedProject } from './redux/selectors';\nvar styles = {\n  thumbnails: {\n    backgroundColor: 'red',\n    maxWidth: 100\n  },\n  container: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    textAlign: 'center',\n    maxWidth: 1400\n  },\n  projectView: {\n    backgroundColor: 'blue'\n  }\n};\nexport var ProjectGallery =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectGallery, _React$Component);\n\n  function ProjectGallery() {\n    _classCallCheck(this, ProjectGallery);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectGallery).apply(this, arguments));\n  }\n\n  _createClass(ProjectGallery, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.props.selectProject(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          projectsFound = _this$props.projectsFound,\n          selectProject = _this$props.selectProject,\n          currentSelectedProject = _this$props.currentSelectedProject,\n          history = _this$props.history;\n      return React.createElement(\"div\", {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Project Gallery\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 2,\n        style: styles.thumbnails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Thumbnails, {\n        projects: projectsFound,\n        selectProject: selectProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 10,\n        style: styles.projectView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(ProjectView, {\n        project: currentSelectedProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ProjectGallery;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectsFound: projectsFound(state),\n    currentSelectedProject: currentSelectedProject(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProjects: function getProjects() {\n      return dispatch(_getProjects());\n    },\n    selectProject: function selectProject(index) {\n      return dispatch(_selectProject(index));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProjectGallery));","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/ProjectGallery/index.js"],"names":["React","connect","withRouter","Grid","Thumbnails","ProjectView","getProjects","selectProject","projectsFound","currentSelectedProject","styles","thumbnails","backgroundColor","maxWidth","container","marginLeft","marginRight","textAlign","projectView","ProjectGallery","props","history","Component","mapStateToProps","state","mapDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Thumbnails  from './Thumbnails';\nimport ProjectView from './ProjectView';\nimport {\n  getProjects,\n  selectProject\n} from './redux/actions';\nimport {\n  projectsFound,\n  currentSelectedProject\n} from './redux/selectors';\n\nconst styles = {\n  thumbnails: {\n    backgroundColor: 'red',\n    maxWidth: 100\n  },\n  container:{\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    textAlign: 'center',\n    maxWidth: 1400\n  },\n  projectView:{\n    backgroundColor: 'blue'\n  }\n}\n\nexport class ProjectGallery extends React.Component {\n\n  componentWillMount(){\n    this.props.getProjects();\n  }\n\n  componentDidMount() {\n    //this.props.selectProject(0);\n  }\n\n  render(){\n    const {\n      projectsFound,\n      selectProject,\n      currentSelectedProject,\n      history\n    } = this.props\n    \n    return(\n      <div style={styles.container}>\n        <h2>Project Gallery</h2>\n        <Grid container spacing = {24} >   \n          <Grid item xs={12} sm={2} style={styles.thumbnails}>\n            <Thumbnails\n              projects={projectsFound}\n              selectProject={selectProject}\n            />\n          </Grid>\n          <Grid item xs={12} sm={10} style={styles.projectView}>\n            <ProjectView\n              project={currentSelectedProject}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  projectsFound: projectsFound(state),\n  currentSelectedProject: currentSelectedProject(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: () => dispatch(getProjects()),\n  selectProject: (index) => dispatch(selectProject(index))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProjectGallery));"]},"metadata":{},"sourceType":"module"}