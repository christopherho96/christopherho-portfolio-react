{"ast":null,"code":"import _defineProperty from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/ProjectForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport { uploadImages } from '../../utils/api';\nvar styles = {\n  paper: {\n    maxWidth: 700,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40\n  },\n  field: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  container: {\n    marginRight: 40,\n    marginLeft: 40,\n    position: 'relative'\n  },\n  dropzone: {\n    marginTop: 20\n  },\n  submitButton: {\n    marginTop: 20,\n    marginBottom: 20\n  },\n  thumbnailUpload: {\n    marginTop: 10,\n    flexDirection: 'row'\n  }\n};\nexport var ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this, props));\n\n    _this.handleChange = function (fieldName) {\n      return function (event) {\n        _this.setState(_defineProperty({}, fieldName, event.target.value));\n      };\n    };\n\n    _this.handleThumbnail = function (fieldName) {\n      return function (event) {\n        _this.setState(_defineProperty({}, fieldName, event.target.files[0]));\n      };\n    };\n\n    _this.handleImageDrop = function (fieldName) {\n      return function (image) {\n        var files = _this.state.pictures;\n        files.push(image);\n\n        _this.setState(_defineProperty({}, fieldName, files));\n      };\n    };\n\n    _this.state = {\n      title: '',\n      type: '',\n      thumbnail: '',\n      description: '',\n      pictures: []\n    };\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Dashboard\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        value: this.state.name,\n        onChange: this.handleChange('title'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-type\",\n        label: \"Type\",\n        value: this.state.type,\n        onChange: this.handleChange('type'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.thumbnailUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Upload Thumbnail\", React.createElement(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        onChange: this.handleThumbnail('thumbnail'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.thumbnail.name)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-description\",\n        label: \"Description\",\n        value: this.state.description,\n        onChange: this.handleChange('description'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: styles.dropzone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(DropzoneArea, {\n        filesLimit: 6,\n        onDrop: this.handleImageDrop('pictures'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: styles.submitButton,\n        onClick: function onClick() {\n          uploadImages(_this2.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Create Project\"))))));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\nexport default connect(null, null)(ProjectForm);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/admin/ProjectForm.js"],"names":["React","connect","TextField","Paper","Grid","DropzoneArea","Button","uploadImages","styles","paper","maxWidth","marginLeft","marginRight","paddingRight","paddingLeft","field","container","position","dropzone","marginTop","submitButton","marginBottom","thumbnailUpload","flexDirection","ProjectForm","props","handleChange","fieldName","event","setState","target","value","handleThumbnail","files","handleImageDrop","image","state","pictures","push","title","type","thumbnail","description","name","display","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport Button from '@material-ui/core/Button';\nimport {uploadImages} from '../../utils/api';\n\nconst styles = {\n  paper: {\n    maxWidth: 700,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40,\n  },\n  field: {\n    marginRight: 20,\n    marginLeft: 20\n  },\n  container:{\n    marginRight: 40,\n    marginLeft: 40,\n    position: 'relative',\n  },\n  dropzone:{\n    marginTop: 20,\n  },\n  submitButton:{\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  thumbnailUpload:{\n    marginTop:10,\n    flexDirection: 'row'\n  }\n};\n\nexport class ProjectForm extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      type: '',\n      thumbnail: '',\n      description: '',\n      pictures: []\n    };\n  }\n\n  handleChange = fieldName => event => {\n    this.setState({ \n      [fieldName] : event.target.value\n    })\n  };\n\n  handleThumbnail = fieldName => event => { \n    this.setState({ \n      [fieldName] : event.target.files[0]\n    })\n  }\n\n  handleImageDrop = fieldName => image => {\n    var files = this.state.pictures\n    files.push(image)\n    this.setState({ \n      [fieldName] : files\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <h2>Dashboard</h2>\n        <Grid container spacing = {24}>\n          <Grid item xs={12} style={styles.container}>\n            <Paper style = {styles.paper}>\n              <Grid item xs= {12}>\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"Name\"\n                  value={this.state.name}\n                  onChange={this.handleChange('title')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  fullWidth={true}\n                />\n              </Grid>\n              <Grid item xs= {12}>\n                <TextField\n                  id=\"outlined-type\"\n                  label=\"Type\"\n                  value={this.state.type}\n                  onChange={this.handleChange('type')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  multiline={true}\n                  fullWidth={true}\n                />\n              </Grid>\n              <Grid item xs={12} style={styles.thumbnailUpload}>\n                <Button variant=\"contained\"component=\"label\">\n                  Upload Thumbnail\n                  <input\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    onChange={this.handleThumbnail('thumbnail')}\n                  />\n                </Button>\n                <p>{this.state.thumbnail.name}</p>\n              </Grid>\n              <Grid item xs= {12}>\n                <TextField\n                  id=\"outlined-description\"\n                  label=\"Description\"\n                  value={this.state.description}\n                  onChange={this.handleChange('description')}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  multiline={true}\n                  fullWidth={true}\n                />\n              </Grid>\n              <Grid item xs= {12} style={styles.dropzone}>\n                <DropzoneArea \n                  filesLimit={6}\n                  onDrop={this.handleImageDrop('pictures')}\n                  />\n              </Grid>\n              <Grid item xs= {12}>\n                <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                style={styles.submitButton}\n                onClick={() => {uploadImages(this.state)}}>\n                  Create Project\n                </Button>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(null,null)(ProjectForm);"]},"metadata":{},"sourceType":"module"}