{"ast":null,"code":"import _classCallCheck from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherho/Projects/christopherhoportfolio-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase from './Showcase';\nimport PortfolioCarousel from './PortfolioCarousel';\nimport ProjectDialog from './ProjectDialog';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport FbImageLibrary from 'react-fb-image-grid';\nimport { getProjects as _getProjects, openProjectDialog, closeProjectDialog } from './redux/actions';\nimport { projectsFound, isProjectDialogOpen } from './redux/selectors';\nvar styles = {\n  grid: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 700\n  },\n  thumbnail: {\n    cursor: 'pointer',\n    maxWidth: '100',\n    height: 'auto'\n  }\n};\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handle = function (src, index) {\n      console.log(src);\n      console.log(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          projectsFound = _this$props.projectsFound,\n          openEditDeveloperDialog = _this$props.openEditDeveloperDialog,\n          closeEditDeveloperDialog = _this$props.closeEditDeveloperDialog,\n          isProjectDialogOpen = _this$props.isProjectDialogOpen;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Showcase, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(FbImageLibrary, {\n        images: projectsFound.map(function (project) {\n          return project.thumbnail;\n        }),\n        onClickEach: function onClickEach(_ref) {\n          var src = _ref.src,\n              index = _ref.index;\n          return openEditDeveloperDialog();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(ProjectDialog, {\n        project: {},\n        showDialog: isProjectDialogOpen,\n        closeDialog: closeEditDeveloperDialog,\n        scroll: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projectsFound: projectsFound(state),\n    isProjectDialogOpen: isProjectDialogOpen(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProjects: function getProjects() {\n      return dispatch(_getProjects());\n    },\n    openEditDeveloperDialog: function openEditDeveloperDialog(projectData) {\n      return dispatch(openProjectDialog(projectData));\n    },\n    closeEditDeveloperDialog: function closeEditDeveloperDialog() {\n      return dispatch(closeProjectDialog());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/Home.js"],"names":["React","connect","Showcase","PortfolioCarousel","ProjectDialog","GridList","GridListTile","Grid","FbImageLibrary","getProjects","openProjectDialog","closeProjectDialog","projectsFound","isProjectDialogOpen","styles","grid","marginLeft","marginRight","width","thumbnail","cursor","maxWidth","height","Home","handle","src","index","console","log","props","openEditDeveloperDialog","closeEditDeveloperDialog","map","project","Component","mapStateToProps","state","mapDispatchToProps","dispatch","projectData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SACEC,WAAW,IAAXA,YADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,iBAJP;AAKA,SACEC,aADF,EAEEC,mBAFF,QAGO,mBAHP;AAKA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAG;AACLC,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,WAAW,EAAE,MAFR;AAGLC,IAAAA,KAAK,EAAE;AAHF,GADM;AAObC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAC,SADE;AAETC,IAAAA,QAAQ,EAAE,KAFD;AAGTC,IAAAA,MAAM,EAAE;AAHC;AAPE,CAAf;AAeA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UAMEC,MANF,GAMW,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATH;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAEsB;AAClB,WAAKG,KAAL,CAAWpB,WAAX;AACD;AAJH;AAAA;AAAA,6BAWU;AAAA,wBAMF,KAAKoB,KANH;AAAA,UAEJjB,aAFI,eAEJA,aAFI;AAAA,UAGJkB,uBAHI,eAGJA,uBAHI;AAAA,UAIJC,wBAJI,eAIJA,wBAJI;AAAA,UAKJlB,mBALI,eAKJA,mBALI;AAQN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAkBE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAGD,aAAa,CAACoB,GAAd,CAAmB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACd,SAAZ;AAAA,SAA1B,CAAzB;AAA4E,QAAA,WAAW,EAAE;AAAA,cAAEM,GAAF,QAAEA,GAAF;AAAA,cAAOC,KAAP,QAAOA,KAAP;AAAA,iBAAkBI,uBAAuB,EAAzC;AAAA,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAmBE,oBAAC,aAAD;AACE,QAAA,OAAO,EAAE,EADX;AAEE,QAAA,UAAU,EAAEjB,mBAFd;AAGE,QAAA,WAAW,EAAEkB,wBAHf;AAIE,QAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADF;AA4BD;AA/CH;;AAAA;AAAA,EAA0B/B,KAAK,CAACkC,SAAhC;;AAkDA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCxB,IAAAA,aAAa,EAAEA,aAAa,CAACwB,KAAD,CADI;AAEhCvB,IAAAA,mBAAmB,EAAEA,mBAAmB,CAACuB,KAAD;AAFR,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtC7B,IAAAA,WAAW,EAAE;AAAA,aAAM6B,QAAQ,CAAC7B,YAAW,EAAZ,CAAd;AAAA,KADyB;AAEtCqB,IAAAA,uBAAuB,EAAE,iCAAAS,WAAW;AAAA,aAAGD,QAAQ,CAAC5B,iBAAiB,CAAC6B,WAAD,CAAlB,CAAX;AAAA,KAFE;AAGtCR,IAAAA,wBAAwB,EAAE;AAAA,aAAMO,QAAQ,CAAC3B,kBAAkB,EAAnB,CAAd;AAAA;AAHY,GAAL;AAAA,CAAnC;;AAMA,eAAeV,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Showcase  from './Showcase';\nimport PortfolioCarousel from './PortfolioCarousel';\nimport ProjectDialog from './ProjectDialog';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport FbImageLibrary from 'react-fb-image-grid'\nimport {\n  getProjects,\n  openProjectDialog,\n  closeProjectDialog\n} from './redux/actions';\nimport {\n  projectsFound,\n  isProjectDialogOpen\n} from './redux/selectors';\n\nconst styles = {\n  grid : {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 700\n  },\n\n  thumbnail: {\n    cursor:'pointer',\n    maxWidth: '100',\n    height: 'auto',\n  }\n};\n\n\nexport class Home extends React.Component {\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  handle = (src, index) => {\n    console.log(src)\n    console.log(index)\n  };\n\n  render(){\n    const {\n      projectsFound,\n      openEditDeveloperDialog,\n      closeEditDeveloperDialog,\n      isProjectDialogOpen\n    } = this.props\n    \n    return(\n      <div>\n        <Showcase>\n        </Showcase>\n        {/* <PortfolioCarousel\n          projectsFound = {projectsFound}\n          openProjectDialog = {openEditDeveloperDialog}\n        /> */}\n        {/* <Grid container spacing = {24}>\n        <Grid item xs={12}>\n        <GridList cellHeight={500} cols={3} styles={styles.grid}>\n          {projectsFound.map(project => (\n            <GridListTile key={project.id} cols={11} onClick={() => this.selectPhoto(project.id)} styles={styles.thumbnail}>\n              <img src={project.thumbnail} alt={project.title} styles={styles.thumbnail} />\n            </GridListTile>\n          ))}\n        </GridList>\n        </Grid>\n        </Grid> */}\n        <FbImageLibrary images={ projectsFound.map( project => project.thumbnail )} onClickEach={({src, index}) => openEditDeveloperDialog() }/>\n        <ProjectDialog\n          project={{}}\n          showDialog={isProjectDialogOpen}\n          closeDialog={closeEditDeveloperDialog}\n          scroll='body'\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  projectsFound: projectsFound(state),\n  isProjectDialogOpen: isProjectDialogOpen(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProjects: () => dispatch(getProjects()),\n  openEditDeveloperDialog: projectData=> dispatch(openProjectDialog(projectData)),\n  closeEditDeveloperDialog: () => dispatch(closeProjectDialog()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}