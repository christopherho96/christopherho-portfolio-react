{"ast":null,"code":"var headers = {\n  Accept: 'application/json',\n  'Access-Control-Allow-Origin': '*'\n};\nexport var parseJson = function parseJson(response) {\n  if (response.status === 204) {\n    return Promise.resolve({});\n  }\n\n  return response.json().catch(function (error) {\n    var newError = error; // Use thrown error so it has the correct stack trace,\n    // but a more friendly message\n\n    newError.message = 'There was a problem with response from the server.';\n    throw newError;\n  });\n};\nexport var fetchProjects = function fetchProjects() {\n  return fetch(\"http://localhost:5000/api/project?\", {\n    headers: headers,\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n  });\n};\nexport var uploadImages = function uploadImages(data) {\n  var urls = [];\n  data.pictures.forEach(function (file) {\n    var formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        res.json().then(function (response) {\n          urls.push(response.url);\n\n          if (urls.length === data.pictures.length) {\n            createProject(urls, data.title, data.description);\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  });\n};\nexport var createProject = function createProject(urls, title, description) {\n  var formData = new FormData();\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/utils/api.js"],"names":["headers","Accept","parseJson","response","status","Promise","resolve","json","catch","error","newError","message","fetchProjects","fetch","method","then","data","console","log","uploadImages","urls","pictures","forEach","file","formData","FormData","append","body","res","ok","push","url","length","createProject","title","description","alert","e"],"mappings":"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","sourcesContent":["const headers = {\n  Accept: 'application/json',\n  'Access-Control-Allow-Origin':'*'\n};\n\nexport const parseJson = response => {\n  if (response.status === 204) {\n    return Promise.resolve({});\n  }\n\n  return response.json().catch(error => {\n    const newError = error;\n    // Use thrown error so it has the correct stack trace,\n    // but a more friendly message\n    newError.message = 'There was a problem with response from the server.';\n    throw newError;\n  });\n};\n\nexport const fetchProjects = () => {\n\n  return fetch(`http://localhost:5000/api/project?`, {\n    headers,\n    method: \"GET\",\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log(data)\n  })    \n};\n\nexport const uploadImages = (data) => {\n  var urls = []\n  data.pictures.forEach((file) => {\n    let formData = new FormData();\n    formData.append('file', file);\n    fetch(\"http://localhost:5000/api/project/uploadImage\", \n    {\n      headers: headers,\n      method: \"POST\",\n      body: formData\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((response) => {\n          urls.push(response.url)\n          if(urls.length === data.pictures.length){\n            createProject(urls, data.title, data.description)\n          }\n        });\n      } else if (res.status == 401) {\n        alert(\"Oops! \");\n      }\n    }, function (e) {\n      alert(\"Error submitting form!\");\n    });\n  })\n}\n\nexport const createProject = (urls, title, description) => {\n  let formData = new FormData();\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('pictures', urls);\n  fetch(\"http://localhost:5000/api/project/uploadProject\", \n  {\n    headers: headers,\n    method: \"POST\",\n    body: formData\n  }).then(function (res) {\n    if (res.ok) {\n      alert(\"Perfect! \");\n    } else if (res.status == 401) {\n      alert(\"Oops! \");\n    }\n  }, function (e) {\n    alert(\"Error submitting form!\");\n  });\n}\n"]},"metadata":{},"sourceType":"module"}