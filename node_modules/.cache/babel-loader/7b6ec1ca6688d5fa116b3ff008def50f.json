{"ast":null,"code":"var _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/ProjectGallery/ProjectView.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGallery from 'react-image-gallery';\nimport Grid from '@material-ui/core/Grid';\nimport Coverflow from 'react-coverflow';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nvar images = function images(pictures) {\n  if (pictures) {\n    return pictures.map(function (picture) {\n      return {\n        original: picture.url,\n        thumbnail: picture.url\n      };\n    });\n  }\n};\n\nvar styles = {\n  showCaseContentLeft: {},\n  showCaseContentRight: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  }\n};\n\nvar ProjectView = function ProjectView(_ref) {\n  var project = _ref.project;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: styles.showcaseContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: styles.showCaseContentLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Coverflow, {\n    width: \"960\",\n    height: \"500\",\n    displayQuantityOfSide: 2,\n    navigation: false,\n    enableScroll: true,\n    clickable: true,\n    active: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: function onClick() {\n      return fn();\n    },\n    onKeyDown: function onKeyDown() {\n      return fn();\n    },\n    role: \"menuitem\",\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"image/path\",\n    alt: \"title or description\",\n    style: {\n      display: 'block',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), project.pictures.map(function (picture, index) {\n    return React.createElement(\"img\", {\n      src: picture,\n      alt: \"title or description\",\n      \"data-action\": \"http://andyyou.github.io/react-coverflow/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: styles.showCaseContentRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, project.title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, project.type), React.createElement(\"p\", {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, project.description))));\n};\n\nexport default ProjectView;\nProjectView.propTypes = {\n  project: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/ProjectGallery/ProjectView.js"],"names":["React","PropTypes","ImageGallery","Grid","Coverflow","images","pictures","map","picture","original","url","thumbnail","styles","showCaseContentLeft","showCaseContentRight","paddingLeft","paddingRight","description","whiteSpace","ProjectView","project","showcaseContent","fn","display","width","index","title","type","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,kDAAP;;AAEA,IAAMC,MAAM,GAAE,SAARA,MAAQ,CAACC,QAAD,EAAc;AAC1B,MAAGA,QAAH,EAAY;AACV,WAAOA,QAAQ,CAACC,GAAT,CAAc,UAAAC,OAAO,EAAI;AAC9B,aAAO;AACLC,QAAAA,QAAQ,EAAED,OAAO,CAACE,GADb;AAELC,QAAAA,SAAS,EAAEH,OAAO,CAACE;AAFd,OAAP;AAID,KALM,CAAP;AAMD;AACF,CATD;;AAWA,IAAME,MAAM,GAAG;AACbC,EAAAA,mBAAmB,EAAC,EADP;AAGbC,EAAAA,oBAAoB,EAAC;AACnBC,IAAAA,WAAW,EAAC,EADO;AAEnBC,IAAAA,YAAY,EAAE;AAFK,GAHR;AAObC,EAAAA,WAAW,EAAC;AACVC,IAAAA,UAAU,EAAE;AADF;AAPC,CAAf;;AAYA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAEd;AAAA,MADJC,OACI,QADJA,OACI;AACJ,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAG,CAA1B;AAA6B,IAAA,KAAK,EAAER,MAAM,CAACS,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,KAAK,EAAET,MAAM,CAACC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAuB,IAAA,MAAM,EAAC,KAA9B;AACN,IAAA,qBAAqB,EAAE,CADjB;AAEN,IAAA,UAAU,EAAE,KAFN;AAGN,IAAA,YAAY,EAAE,IAHR;AAIN,IAAA,SAAS,EAAE,IAJL;AAKN,IAAA,MAAM,EAAE,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAON;AACE,IAAA,OAAO,EAAE;AAAA,aAAMS,EAAE,EAAR;AAAA,KADX;AAEE,IAAA,SAAS,EAAE;AAAA,aAAMA,EAAE,EAAR;AAAA,KAFb;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAC,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,GAAG,EAAC,sBAFN;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,OADJ;AAELC,MAAAA,KAAK,EAAE;AAFF,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAPM,EAsBLJ,OAAO,CAACd,QAAR,CAAiBC,GAAjB,CAAqB,UAASC,OAAT,EAAkBiB,KAAlB,EAAwB;AAC5C,WACE;AAAK,MAAA,GAAG,EAAEjB,OAAV;AAAmB,MAAA,GAAG,EAAC,sBAAvB;AAA8C,qBAAY,2CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CAtBK,CADA,CADF,EA+BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,KAAK,EAAEI,MAAM,CAACE,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,OAAO,CAACM,KAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,OAAO,CAACO,IAAb,CAFF,EAGE;AAAG,IAAA,KAAK,EAAEf,MAAM,CAACK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCG,OAAO,CAACH,WADT,CAHF,CA/BF,CADF,CADJ;AA2CD,CA9CD;;AAgDA,eAAeE,WAAf;AAEAA,WAAW,CAACS,SAAZ,GAAwB;AACtBR,EAAAA,OAAO,EAAEnB,SAAS,CAAC4B,MAAV,CAAiBC;AADJ,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGallery from 'react-image-gallery';\nimport Grid from '@material-ui/core/Grid';\nimport Coverflow from 'react-coverflow';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nconst images =(pictures) => {\n  if(pictures){\n    return pictures.map( picture => {\n      return {\n        original: picture.url,\n        thumbnail: picture.url,\n      }\n    })\n  }\n}\n\nconst styles = {\n  showCaseContentLeft:{\n  },\n  showCaseContentRight:{\n    paddingLeft:20,\n    paddingRight: 20\n  },\n  description:{\n    whiteSpace: 'pre-line'\n  }\n};\n\nconst ProjectView = ({\n  project\n}) => {\n  return (\n      <div>\n        <Grid container spacing ={0} style={styles.showcaseContent}>\n          <Grid item xs={12} sm={6} style={styles.showCaseContentLeft}>\n          <Coverflow width=\"960\" height=\"500\"\n    displayQuantityOfSide={2}\n    navigation={false}\n    enableScroll={true}\n    clickable={true}\n    active={0}\n  >\n    <div\n      onClick={() => fn()}\n      onKeyDown={() => fn()}\n      role=\"menuitem\"\n      tabIndex=\"0\"\n    >\n      <img\n        src='image/path'\n        alt='title or description'\n        style={{\n          display: 'block',\n          width: '100%',\n        }}\n      />\n    </div>\n    {project.pictures.map(function(picture, index){\n      return (     \n        <img src={picture} alt='title or description' data-action=\"http://andyyou.github.io/react-coverflow/\"/>     \n      )\n    })}\n  </Coverflow>\n          </Grid>\n          <Grid item xs={12} sm={6} style={styles.showCaseContentRight}>\n            <h2>{project.title}</h2>\n            <h4>{project.type}</h4>\n            <p style={styles.description}>\n            {project.description}\n            </p>\n          </Grid>\n        </Grid>\n      </div>\n  );\n};\n\nexport default ProjectView;\n\nProjectView.propTypes = {\n  project: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}