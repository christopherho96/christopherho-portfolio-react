{"ast":null,"code":"var _jsxFileName = \"/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/ProjectDialog.js\";\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport ImageGallery from 'react-image-gallery';\nimport Grid from '@material-ui/core/Grid';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport Button from '@material-ui/core/Button';\nimport InstagramProfilePhone from '../../assets/instagramProfileMobile.png';\n\nvar images = function images(pictures) {\n  if (pictures) {\n    return pictures.map(function (picture) {\n      return {\n        original: picture.url,\n        thumbnail: picture.url\n      };\n    });\n  }\n};\n\nvar styles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    height: '100%',\n    width: '100%'\n  },\n  showcaseBannerText: {\n    fontSize: 46,\n    fontFamily: 'Roboto Mono',\n    color: '#FFFFFF'\n  },\n  showcaseContent: {\n    maxWidth: 1000,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  showCaseButton: {\n    marginRight: 20\n  },\n  showCaseContentLeft: {\n    backgroundImage: \"url(\".concat(InstagramProfilePhone, \")\"),\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    height: '100%'\n  },\n  showCaseContentRight: {\n    height: '100%',\n    paddingTop: 250,\n    paddingLeft: 100\n  }\n};\n\nvar ProjectDialog = function ProjectDialog(_ref) {\n  var showDialog = _ref.showDialog,\n      closeDialog = _ref.closeDialog,\n      project = _ref.project,\n      scroll = _ref.scroll;\n  console.log(project.pictures);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: showDialog,\n    onClose: closeDialog,\n    scroll: scroll,\n    maxWidth: 'lg',\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, project.title), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: styles.showcaseContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: styles.showCaseContentLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ImageGallery, {\n    items: images(project.pictures),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: styles.showCaseContentRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, project.description))));\n};\n\nexport default ProjectDialog;\nProjectDialog.propTypes = {\n  project: PropTypes.object.isRequired,\n  showDialog: PropTypes.bool.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  scroll: PropTypes.string.isRequired\n};\nProjectDialog.defaultProps = {\n  scroll: 'body'\n};","map":{"version":3,"sources":["/Users/christopherho/Projects/christopherhoportfolio-react/src/screens/HomePage/ProjectDialog.js"],"names":["React","Dialog","DialogContent","DialogContentText","DialogTitle","PropTypes","ImageGallery","Grid","Button","InstagramProfilePhone","images","pictures","map","picture","original","url","thumbnail","styles","overlay","backgroundColor","height","width","showcaseBannerText","fontSize","fontFamily","color","showcaseContent","maxWidth","marginLeft","marginRight","paddingRight","paddingLeft","display","alignItems","showCaseButton","showCaseContentLeft","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","showCaseContentRight","paddingTop","ProjectDialog","showDialog","closeDialog","project","scroll","console","log","title","description","propTypes","object","isRequired","bool","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport ImageGallery from 'react-image-gallery';\nimport Grid from '@material-ui/core/Grid';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport Button from '@material-ui/core/Button';\nimport InstagramProfilePhone from '../../assets/instagramProfileMobile.png';\n\nconst images =(pictures) => {\n  if(pictures){\n    return pictures.map( picture => {\n      return {\n        original: picture.url,\n        thumbnail: picture.url\n      }\n    })\n  }\n}\n\nconst styles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    height: '100%',\n    width: '100%',\n  },\n  showcaseBannerText: {\n    fontSize: 46,\n    fontFamily: 'Roboto Mono',\n    color:'#FFFFFF',\n  },\n\n  showcaseContent: {\n    maxWidth: 1000,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    paddingRight: 40,\n    paddingLeft: 40,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  showCaseButton:{\n    marginRight: 20\n  },\n  showCaseContentLeft:{\n    backgroundImage: `url(${InstagramProfilePhone})`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    height: '100%',\n  },\n  showCaseContentRight:{\n    height: '100%',\n    paddingTop: 250,\n    paddingLeft: 100\n  },\n};\n\nconst ProjectDialog = ({\n  showDialog,\n  closeDialog,\n  project,\n  scroll\n}) => {\n  console.log(project.pictures)\n  return (\n      <div>\n        <Dialog\n          open={showDialog}\n          onClose={closeDialog}\n          scroll={scroll}\n          maxWidth={'lg'}\n          aria-labelledby=\"scroll-dialog-title\"\n        >\n          <DialogTitle id=\"scroll-dialog-title\">{project.title}</DialogTitle>\n          <DialogContent>\n          <Grid container spacing ={0} style={styles.showcaseContent}>\n              <Grid item xs={12} sm={6} style={styles.showCaseContentLeft}>\n              <ImageGallery items={images(project.pictures)} />\n              </Grid>\n              <Grid item xs={12} sm={6} style={styles.showCaseContentRight}>\n              \n              </Grid>\n            </Grid>\n            <DialogContentText>\n              {project.description}\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </div>\n  );\n};\n\nexport default ProjectDialog;\n\nProjectDialog.propTypes = {\n  project: PropTypes.object.isRequired,\n  showDialog: PropTypes.bool.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  scroll: PropTypes.string.isRequired\n};\n\nProjectDialog.defaultProps = {\n  scroll: 'body'\n};\n"]},"metadata":{},"sourceType":"module"}